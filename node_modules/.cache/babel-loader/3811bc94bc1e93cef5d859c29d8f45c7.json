{"remainingRequest":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\markdown\\assets\\js\\marked\\index.js","dependencies":[{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\markdown\\assets\\js\\marked\\index.js","mtime":1640167407520},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638433259471},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1638433269605}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.link\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.regexp.replace\";\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n  + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n  + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n  + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n  + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n  + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n  + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n  + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n  + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n  + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noop,\n  table: noop,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original src spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\nblock.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\nblock.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} +').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n.replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n.getRegex();\nblock.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n/**\r\n * Normal Block Grammar\r\n */\n\nblock.normal = merge({}, block);\n/**\r\n * GFM Block Grammar\r\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n/**\r\n * Pedantic grammar (original John Gruber's loose src specification)\r\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n  + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noop,\n  // fences not supported\n  paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n});\n/**\r\n * Block Lexer\r\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || index.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    this.rules = block.gfm;\n  }\n}\n/**\r\n * Expose Block Rules\r\n */\n\n\nLexer.rules = block;\n/**\r\n * Static Lex Method\r\n */\n\nLexer.lex = function (src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n/**\r\n * Preprocessing\r\n */\n\n\nLexer.prototype.lex = function (src) {\n  src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n  return this.token(src, true);\n};\n/**\r\n * Lexing\r\n */\n\n\nLexer.prototype.token = function (src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    } // code\n\n\n    if (cap = this.rules.code.exec(src)) {\n      var lastToken = this.tokens[this.tokens.length - 1];\n      src = src.substring(cap[0].length); // An indented code block cannot interrupt a paragraph.\n\n      if (lastToken && lastToken.type === 'paragraph') {\n        lastToken.text += '\\n' + cap[0].trimRight();\n      } else {\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(cap, '\\n') : cap\n        });\n      }\n\n      continue;\n    } // fences\n\n\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    } // heading\n\n\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    } // table no leading pipe (gfm)\n\n\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n        continue;\n      }\n    } // hr\n\n\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    } // blockquote\n\n\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n      cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how src.pl works.\n\n      this.token(cap, top);\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n      continue;\n    } // list\n\n\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n      this.tokens.push(listStart); // Get each top-level item.\n\n      cap = cap[0].match(this.rules.item);\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i]; // Remove the list item's bullet\n        // so it is seen as the next token.\n\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n        // list item contains. Hacky.\n\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n        } // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n\n\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n\n          if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        } // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n\n\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        } // Check for task list items\n\n\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n        listItems.push(t);\n        this.tokens.push(t); // Recurse.\n\n        this.token(item, false);\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n      continue;\n    } // html\n\n\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize ? 'paragraph' : 'html',\n        pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n      });\n      continue;\n    } // def\n\n\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n\n      continue;\n    } // table (gfm)\n\n\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n        }\n\n        this.tokens.push(item);\n        continue;\n      }\n    } // lheading\n\n\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    } // top-level paragraph\n\n\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n      });\n      continue;\n    }\n\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n/**\r\n * Inline-Level Grammar\r\n */\n\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n  + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n  + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n  + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n  + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n  // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n}; // list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\n\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\ninline.tag = edit(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\ninline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\ninline.reflink = edit(inline.reflink).replace('label', inline._label).getRegex();\n/**\r\n * Normal Inline Grammar\r\n */\n\ninline.normal = merge({}, inline);\n/**\r\n * Pedantic Inline Grammar\r\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n});\n/**\r\n * GFM Inline Grammar\r\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\ninline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n/**\r\n * GFM + Line Breaks Inline Grammar\r\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n});\n/**\r\n * Inline Lexer & Compiler\r\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || index.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n/**\r\n * Expose Inline Rules\r\n */\n\n\nInlineLexer.rules = inline;\n/**\r\n * Static Lexing/Compiling Method\r\n */\n\nInlineLexer.output = function (src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n/**\r\n * Lexing/Compiling\r\n */\n\n\nInlineLexer.prototype.output = function (src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    } // tag\n\n\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n      continue;\n    } // link\n\n\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n\n      if (lastParenIndex > -1) {\n        var linkLen = 4 + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    } // reflink, nolink\n\n\n    if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    } // strong\n\n\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    } // em\n\n\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    } // code\n\n\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    } // br\n\n\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    } // del (gfm)\n\n\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    } // autolink\n\n\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      out += this.renderer.link(href, null, text);\n      continue;\n    } // url (gfm)\n\n\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n\n        text = escape(cap[0]);\n\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    } // text\n\n\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      if (this.inRawBlock) {\n        out += this.renderer.text(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function (text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n/**\r\n * Compile Link\r\n */\n\n\nInlineLexer.prototype.outputLink = function (cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n  return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n};\n/**\r\n * Smartypants Transformations\r\n */\n\n\nInlineLexer.prototype.smartypants = function (text) {\n  if (!this.options.smartypants) return text;\n  return text // em-dashes\n  .replace(/---/g, \"\\u2014\") // en-dashes\n  .replace(/--/g, \"\\u2013\") // opening singles\n  .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n  .replace(/'/g, \"\\u2019\") // opening doubles\n  .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n  .replace(/\"/g, \"\\u201D\") // ellipses\n  .replace(/\\.{3}/g, \"\\u2026\");\n};\n/**\r\n * Mangle Links\r\n */\n\n\nInlineLexer.prototype.mangle = function (text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n/**\r\n * Renderer\r\n */\n\n\nfunction Renderer(options) {\n  this.options = options || index.defaults;\n}\n\nRenderer.prototype.code = function (code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>' + (escaped ? code : escape(code, true)) + '</code></pre>';\n  }\n\n  return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function (quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function (html) {\n  return html;\n};\n\nRenderer.prototype.heading = function (text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n  } // ignore IDs\n\n\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function () {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function (body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function (text) {\n  var reg = /\\<input.+\\>/;\n  var className = '';\n\n  if (reg.test(text)) {\n    className = 'list-item-checkbox';\n\n    if (/checked/.test(text)) {\n      className += ' list-item-checkbox-checked';\n    }\n  }\n\n  return \"<li class=\\\"\".concat(className, \" \\\">\").concat(text, \"</li>\\n\");\n};\n\nRenderer.prototype.checkbox = function (checked) {\n  return '<input ' + (checked ? 'checked ' : '') + 'disabled type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n};\n\nRenderer.prototype.paragraph = function (text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function (header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n  return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function (content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function (content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n}; // span level renderer\n\n\nRenderer.prototype.strong = function (text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function (text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function (text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function () {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function (text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function (href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<a href=\"' + escape(href) + '\"';\n\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function (href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function (text) {\n  return text;\n};\n/**\r\n * TextRenderer\r\n * returns only the textual part of the token\r\n */\n\n\nfunction TextRenderer() {} // no need for block level renderers\n\n\nTextRenderer.prototype.strong = TextRenderer.prototype.em = TextRenderer.prototype.codespan = TextRenderer.prototype.del = TextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link = TextRenderer.prototype.image = function (href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function () {\n  return '';\n};\n/**\r\n * Parsing & Compiling\r\n */\n\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || index.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n/**\r\n * Static Parse Method\r\n */\n\n\nParser.parse = function (src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n/**\r\n * Parse Loop\r\n */\n\n\nParser.prototype.parse = function (src) {\n  this.inline = new InlineLexer(src.links, this.options); // use an InlineLexer with a TextRenderer to extract pure text\n\n  this.inlineText = new InlineLexer(src.links, merge({}, this.options, {\n    renderer: new TextRenderer()\n  }));\n  this.tokens = src.reverse();\n  var out = '';\n\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n/**\r\n * Next Token\r\n */\n\n\nParser.prototype.next = function () {\n  this.token = this.tokens.pop();\n  return this.token;\n};\n/**\r\n * Preview Next Token\r\n */\n\n\nParser.prototype.peek = function () {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n/**\r\n * Parse Text Tokens\r\n */\n\n\nParser.prototype.parseText = function () {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n/**\r\n * Parse Current Token\r\n */\n\n\nParser.prototype.tok = function () {\n  switch (this.token.type) {\n    case 'space':\n      {\n        return '';\n      }\n\n    case 'hr':\n      {\n        return this.renderer.hr();\n      }\n\n    case 'heading':\n      {\n        return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)), this.slugger);\n      }\n\n    case 'code':\n      {\n        return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n      }\n\n    case 'table':\n      {\n        var header = '',\n            body = '',\n            i,\n            row,\n            cell,\n            j; // header\n\n        cell = '';\n\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n            header: true,\n            align: this.token.align[i]\n          });\n        }\n\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n          cell = '';\n\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(this.inline.output(row[j]), {\n              header: false,\n              align: this.token.align[j]\n            });\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n\n        return this.renderer.table(header, body);\n      }\n\n    case 'blockquote_start':\n      {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n\n    case 'list_start':\n      {\n        body = '';\n        var ordered = this.token.ordered,\n            start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n\n    case 'list_item_start':\n      {\n        body = '';\n        var loose = this.token.loose;\n        var checked = this.token.checked;\n        var task = this.token.task;\n\n        if (this.token.task) {\n          body += this.renderer.checkbox(checked);\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n        }\n\n        return this.renderer.listitem(body, task, checked);\n      }\n\n    case 'html':\n      {\n        // TODO parse inline content if parameter src=1\n        return this.renderer.html(this.token.text);\n      }\n\n    case 'paragraph':\n      {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n\n    case 'text':\n      {\n        return this.renderer.paragraph(this.parseText());\n      }\n\n    default:\n      {\n        var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n  }\n};\n/**\r\n * Slugger generates header id\r\n */\n\n\nfunction Slugger() {\n  this.seen = {};\n}\n/**\r\n * Convert string to unique id\r\n */\n\n\nSlugger.prototype.slug = function (value) {\n  var slug = value.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n\n  this.seen[slug] = 0;\n  return slug;\n};\n/**\r\n * Helpers\r\n */\n\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) {\n        return escape.replacements[ch];\n      });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) {\n        return escape.replacements[ch];\n      });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n    }\n\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function replace(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function getRegex() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n    } catch (e) {\n      return null;\n    }\n\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\n\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n    var escaped = false,\n        curr = offset;\n\n    while (--curr >= 0 && str[curr] === '\\\\') {\n      escaped = !escaped;\n    }\n\n    if (escaped) {\n      // odd number of slashes means | is escaped\n      // so we leave it alone\n      return '|';\n    } else {\n      // add space before unescaped |\n      return ' |';\n    }\n  }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) {\n      cells.push('');\n    }\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n\n  return cells;\n} // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\n\n\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  } // Length of suffix matching the invert condition.\n\n\n  var suffLen = 0; // Step left until we fail to match the invert condition.\n\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n\n  var level = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('index(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n/**\r\n * Marked\r\n */\n\n\nfunction index(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('index(): input parameter is undefined or null');\n  }\n\n  if (typeof src !== 'string') {\n    throw new Error('index(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, index.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function done(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n      return err ? callback(err) : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function (token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n\n        return highlight(token.text, token.lang, function (err, code) {\n          if (err) return done(err);\n\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n\n  try {\n    if (opt) opt = merge({}, index.defaults, opt);\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if ((opt || index.defaults).silent) {\n      return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n    }\n\n    throw e;\n  }\n}\n/**\r\n * Options\r\n */\n\n\nindex.options = index.setOptions = function (opt) {\n  merge(index.defaults, opt);\n  return index;\n};\n\nindex.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n};\n\nindex.defaults = index.getDefaults();\n/**\r\n * Expose\r\n */\n\nindex.Parser = Parser;\nindex.parser = Parser.parse;\nindex.Renderer = Renderer;\nindex.TextRenderer = TextRenderer;\nindex.Lexer = Lexer;\nindex.lexer = Lexer.lex;\nindex.InlineLexer = InlineLexer;\nindex.inlineLexer = InlineLexer.output;\nindex.Slugger = Slugger;\nindex.parse = index;\nexport default index;",{"version":3,"sources":["C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\markdown\\assets\\js\\marked\\index.js"],"names":["block","newline","code","fences","hr","heading","blockquote","list","html","def","nptable","noop","table","lheading","_paragraph","text","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","paragraph","normal","merge","gfm","pedantic","Lexer","options","tokens","links","Object","create","index","defaults","rules","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","lastToken","trimRight","codeBlockStyle","rtrim","lang","trim","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","escape","toLowerCase","href","title","Error","charCodeAt","inline","autolink","url","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","InlineLexer","renderer","Renderer","output","out","prevCapZero","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","ch","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","slugger","headerIds","headerPrefix","slug","xhtml","body","startatt","listitem","reg","className","checkbox","tablerow","content","tablecell","flags","cleanUrl","baseUrl","TextRenderer","Parser","Slugger","parse","parser","inlineText","reverse","tok","pop","peek","parseText","unescape","row","cell","j","errMsg","silent","console","log","seen","value","hasOwnProperty","originalSlug","encode","escapeTest","escapeReplace","replacements","escapeTestNoEncode","escapeReplaceNoEncode","_","n","String","fromCharCode","parseInt","regex","opt","name","val","base","prot","decodeURIComponent","e","originIndependentUrl","resolveUrl","encodeURI","baseUrls","obj","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","warn","callback","pending","done","err","message","setOptions","getDefaults","inlineLexer"],"mappings":";;;;;;;;;;AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,OAAO,EAAE,MADD;AAERC,EAAAA,IAAI,EAAE,mBAFE;AAGRC,EAAAA,MAAM,EAAE,iFAHA;AAIRC,EAAAA,EAAE,EAAE,wDAJI;AAKRC,EAAAA,OAAO,EAAE,gDALD;AAMRC,EAAAA,UAAU,EAAE,yCANJ;AAORC,EAAAA,IAAI,EAAE,mEAPE;AAQRC,EAAAA,IAAI,EAAE,aAAa;AAAb,IACA,4DADA,CAC6D;AAD7D,IAEA,yBAFA,CAE0B;AAF1B,IAGA,yBAHA,CAG0B;AAH1B,IAIA,yBAJA,CAI0B;AAJ1B,IAKA,qCALA,CAKsC;AALtC,IAMA,gDANA,CAMiD;AANjD,IAOA,qGAPA,CAOsG;AAPtG,IAQA,qFARA,CAQsF;AARtF,IASA,GAjBE;AAkBRC,EAAAA,GAAG,EAAE,kFAlBG;AAmBRC,EAAAA,OAAO,EAAEC,IAnBD;AAoBRC,EAAAA,KAAK,EAAED,IApBC;AAqBRE,EAAAA,QAAQ,EAAE,qCArBF;AAsBR;AACA;AACAC,EAAAA,UAAU,EAAE,2EAxBJ;AAyBRC,EAAAA,IAAI,EAAE;AAzBE,CAAZ;AA4BAf,KAAK,CAACgB,MAAN,GAAe,gCAAf;AACAhB,KAAK,CAACiB,MAAN,GAAe,8DAAf;AACAjB,KAAK,CAACS,GAAN,GAAYS,IAAI,CAAClB,KAAK,CAACS,GAAP,CAAJ,CACPU,OADO,CACC,OADD,EACUnB,KAAK,CAACgB,MADhB,EAEPG,OAFO,CAEC,OAFD,EAEUnB,KAAK,CAACiB,MAFhB,EAGPG,QAHO,EAAZ;AAKApB,KAAK,CAACqB,MAAN,GAAe,qBAAf;AACArB,KAAK,CAACsB,IAAN,GAAa,8CAAb;AACAtB,KAAK,CAACsB,IAAN,GAAaJ,IAAI,CAAClB,KAAK,CAACsB,IAAP,EAAa,IAAb,CAAJ,CACRH,OADQ,CACA,OADA,EACSnB,KAAK,CAACqB,MADf,EAERD,QAFQ,EAAb;AAIApB,KAAK,CAACO,IAAN,GAAaW,IAAI,CAAClB,KAAK,CAACO,IAAP,CAAJ,CACRY,OADQ,CACA,OADA,EACSnB,KAAK,CAACqB,MADf,EAERF,OAFQ,CAEA,IAFA,EAEM,iEAFN,EAGRA,OAHQ,CAGA,KAHA,EAGO,YAAYnB,KAAK,CAACS,GAAN,CAAUc,MAAtB,GAA+B,GAHtC,EAIRH,QAJQ,EAAb;AAMApB,KAAK,CAACwB,IAAN,GAAa,gEACP,0EADO,GAEP,sEAFO,GAGP,yEAHO,GAIP,wEAJO,GAKP,WALN;AAMAxB,KAAK,CAACyB,QAAN,GAAiB,wBAAjB;AACAzB,KAAK,CAACQ,IAAN,GAAaU,IAAI,CAAClB,KAAK,CAACQ,IAAP,EAAa,GAAb,CAAJ,CACRW,OADQ,CACA,SADA,EACWnB,KAAK,CAACyB,QADjB,EAERN,OAFQ,CAEA,KAFA,EAEOnB,KAAK,CAACwB,IAFb,EAGRL,OAHQ,CAGA,WAHA,EAGa,0EAHb,EAIRC,QAJQ,EAAb;AAMApB,KAAK,CAAC0B,SAAN,GAAkBR,IAAI,CAAClB,KAAK,CAACc,UAAP,CAAJ,CACbK,OADa,CACL,IADK,EACCnB,KAAK,CAACI,EADP,EAEbe,OAFa,CAEL,SAFK,EAEM,gBAFN,EAGbA,OAHa,CAGL,WAHK,EAGQ,EAHR,EAGY;AAHZ,CAIbA,OAJa,CAIL,YAJK,EAIS,SAJT,EAKbA,OALa,CAKL,QALK,EAKK,kCALL,EAMbA,OANa,CAML,MANK,EAMG,wBANH,EAM6B;AAN7B,CAObA,OAPa,CAOL,MAPK,EAOG,oDAPH,EAQbA,OARa,CAQL,KARK,EAQEnB,KAAK,CAACwB,IARR,EAQc;AARd,CASbJ,QATa,EAAlB;AAWApB,KAAK,CAACM,UAAN,GAAmBY,IAAI,CAAClB,KAAK,CAACM,UAAP,CAAJ,CACda,OADc,CACN,WADM,EACOnB,KAAK,CAAC0B,SADb,EAEdN,QAFc,EAAnB;AAIA;;;;AAIApB,KAAK,CAAC2B,MAAN,GAAeC,KAAK,CAAC,EAAD,EAAK5B,KAAL,CAApB;AAEA;;;;AAIAA,KAAK,CAAC6B,GAAN,GAAYD,KAAK,CAAC,EAAD,EAAK5B,KAAK,CAAC2B,MAAX,EAAmB;AAChCjB,EAAAA,OAAO,EAAE,+EADuB;AAEhCE,EAAAA,KAAK,EAAE;AAFyB,CAAnB,CAAjB;AAKA;;;;AAIAZ,KAAK,CAAC8B,QAAN,GAAiBF,KAAK,CAAC,EAAD,EAAK5B,KAAK,CAAC2B,MAAX,EAAmB;AACrCnB,EAAAA,IAAI,EAAEU,IAAI,CACN,iCACE,4CADF,CAC+C;AAD/C,IAEE,sEAHI,CAAJ,CAIDC,OAJC,CAIO,SAJP,EAIkBnB,KAAK,CAACyB,QAJxB,EAKDN,OALC,CAKO,MALP,EAKe,WACX,qEADW,GAEX,6DAFW,GAGX,+BARJ,EASDC,QATC,EAD+B;AAWrCX,EAAAA,GAAG,EAAE,mEAXgC;AAYrCJ,EAAAA,OAAO,EAAE,4CAZ4B;AAarCF,EAAAA,MAAM,EAAEQ,IAb6B;AAavB;AACde,EAAAA,SAAS,EAAER,IAAI,CAAClB,KAAK,CAAC2B,MAAN,CAAab,UAAd,CAAJ,CACNK,OADM,CACE,IADF,EACQnB,KAAK,CAACI,EADd,EAENe,OAFM,CAEE,SAFF,EAEa,iBAFb,EAGNA,OAHM,CAGE,UAHF,EAGcnB,KAAK,CAACa,QAHpB,EAINM,OAJM,CAIE,YAJF,EAIgB,SAJhB,EAKNA,OALM,CAKE,SALF,EAKa,EALb,EAMNA,OANM,CAME,OANF,EAMW,EANX,EAONA,OAPM,CAOE,OAPF,EAOW,EAPX,EAQNC,QARM;AAd0B,CAAnB,CAAtB;AAyBA;;;;AAIA,SAASW,KAAT,CAAeC,OAAf,EAAwB;AACpB,OAAKC,MAAL,GAAc,EAAd;AACA,OAAKA,MAAL,CAAYC,KAAZ,GAAoBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAApB;AACA,OAAKJ,OAAL,GAAeA,OAAO,IAAIK,KAAK,CAACC,QAAhC;AACA,OAAKC,KAAL,GAAavC,KAAK,CAAC2B,MAAnB;;AAEA,MAAI,KAAKK,OAAL,CAAaF,QAAjB,EAA2B;AACvB,SAAKS,KAAL,GAAavC,KAAK,CAAC8B,QAAnB;AACH,GAFD,MAEO,IAAI,KAAKE,OAAL,CAAaH,GAAjB,EAAsB;AACzB,SAAKU,KAAL,GAAavC,KAAK,CAAC6B,GAAnB;AACH;AACJ;AAED;;;;;AAIAE,KAAK,CAACQ,KAAN,GAAcvC,KAAd;AAEA;;;;AAIA+B,KAAK,CAACS,GAAN,GAAY,UAAUC,GAAV,EAAeT,OAAf,EAAwB;AAChC,MAAIU,KAAK,GAAG,IAAIX,KAAJ,CAAUC,OAAV,CAAZ;AACA,SAAOU,KAAK,CAACF,GAAN,CAAUC,GAAV,CAAP;AACH,CAHD;AAKA;;;;;AAIAV,KAAK,CAACY,SAAN,CAAgBH,GAAhB,GAAsB,UAAUC,GAAV,EAAe;AACjCA,EAAAA,GAAG,GAAGA,GAAG,CACJtB,OADC,CACO,UADP,EACmB,IADnB,EAEDA,OAFC,CAEO,KAFP,EAEc,MAFd,EAGDA,OAHC,CAGO,SAHP,EAGkB,GAHlB,EAIDA,OAJC,CAIO,SAJP,EAIkB,IAJlB,CAAN;AAMA,SAAO,KAAKyB,KAAL,CAAWH,GAAX,EAAgB,IAAhB,CAAP;AACH,CARD;AAUA;;;;;AAIAV,KAAK,CAACY,SAAN,CAAgBC,KAAhB,GAAwB,UAAUH,GAAV,EAAeI,GAAf,EAAoB;AACxCJ,EAAAA,GAAG,GAAGA,GAAG,CAACtB,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAN;AACA,MAAI2B,IAAJ,EACIC,KADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAIIC,CAJJ,EAKI5B,IALJ,EAMI6B,SANJ,EAOIC,SAPJ,EAQIC,CARJ,EASIC,KATJ,EAUIC,CAVJ,EAWIC,GAXJ,EAYIC,CAZJ,EAaIC,SAbJ,EAcIC,MAdJ,EAeIC,SAfJ;;AAiBA,SAAOnB,GAAP,EAAY;AACR;AACA,QAAIO,GAAG,GAAG,KAAKT,KAAL,CAAWtC,OAAX,CAAmB4D,IAAnB,CAAwBpB,GAAxB,CAAV,EAAwC;AACpCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;;AACA,UAAIf,GAAG,CAAC,CAAD,CAAH,CAAOe,MAAP,GAAgB,CAApB,EAAuB;AACnB,aAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,UAAAA,IAAI,EAAE;AADO,SAAjB;AAGH;AACJ,KATO,CAWR;;;AACA,QAAIjB,GAAG,GAAG,KAAKT,KAAL,CAAWrC,IAAX,CAAgB2D,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjC,UAAIyB,SAAS,GAAG,KAAKjC,MAAL,CAAY,KAAKA,MAAL,CAAY8B,MAAZ,GAAqB,CAAjC,CAAhB;AACAtB,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN,CAFiC,CAGjC;;AACA,UAAIG,SAAS,IAAIA,SAAS,CAACD,IAAV,KAAmB,WAApC,EAAiD;AAC7CC,QAAAA,SAAS,CAACnD,IAAV,IAAkB,OAAOiC,GAAG,CAAC,CAAD,CAAH,CAAOmB,SAAP,EAAzB;AACH,OAFD,MAEO;AACHnB,QAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAAN;AACA,aAAKc,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,UAAAA,IAAI,EAAE,MADO;AAEbG,UAAAA,cAAc,EAAE,UAFH;AAGbrD,UAAAA,IAAI,EAAE,CAAC,KAAKiB,OAAL,CAAaF,QAAd,GACAuC,KAAK,CAACrB,GAAD,EAAM,IAAN,CADL,GAEAA;AALO,SAAjB;AAOH;;AACD;AACH,KA7BO,CA+BR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWpC,MAAX,CAAkB0D,IAAlB,CAAuBpB,GAAvB,CAAV,EAAuC;AACnCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE,MADO;AAEbK,QAAAA,IAAI,EAAEtB,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOuB,IAAP,EAAT,GAAyBvB,GAAG,CAAC,CAAD,CAFrB;AAGbjC,QAAAA,IAAI,EAAEiC,GAAG,CAAC,CAAD,CAAH,IAAU;AAHH,OAAjB;AAKA;AACH,KAxCO,CA0CR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWlC,OAAX,CAAmBwD,IAAnB,CAAwBpB,GAAxB,CAAV,EAAwC;AACpCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE,SADO;AAEbO,QAAAA,KAAK,EAAExB,GAAG,CAAC,CAAD,CAAH,CAAOe,MAFD;AAGbhD,QAAAA,IAAI,EAAEiC,GAAG,CAAC,CAAD;AAHI,OAAjB;AAKA;AACH,KAnDO,CAqDR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAW7B,OAAX,CAAmBmD,IAAnB,CAAwBpB,GAAxB,CAAV,EAAwC;AACpCnB,MAAAA,IAAI,GAAG;AACH2C,QAAAA,IAAI,EAAE,OADH;AAEHQ,QAAAA,MAAM,EAAEC,UAAU,CAAC1B,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,cAAf,EAA+B,EAA/B,CAAD,CAFf;AAGHwD,QAAAA,KAAK,EAAE3B,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,YAAf,EAA6B,EAA7B,EAAiCyD,KAAjC,CAAuC,QAAvC,CAHJ;AAIHC,QAAAA,KAAK,EAAE7B,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,KAAf,EAAsB,EAAtB,EAA0ByD,KAA1B,CAAgC,IAAhC,CAAT,GAAiD;AAJrD,OAAP;;AAOA,UAAItD,IAAI,CAACmD,MAAL,CAAYV,MAAZ,KAAuBzC,IAAI,CAACqD,KAAL,CAAWZ,MAAtC,EAA8C;AAC1CtB,QAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;;AAEA,aAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjC,IAAI,CAACqD,KAAL,CAAWZ,MAA3B,EAAmCR,CAAC,EAApC,EAAwC;AACpC,cAAI,YAAYuB,IAAZ,CAAiBxD,IAAI,CAACqD,KAAL,CAAWpB,CAAX,CAAjB,CAAJ,EAAqC;AACjCjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,OAAhB;AACH,WAFD,MAEO,IAAI,aAAauB,IAAb,CAAkBxD,IAAI,CAACqD,KAAL,CAAWpB,CAAX,CAAlB,CAAJ,EAAsC;AACzCjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,QAAhB;AACH,WAFM,MAEA,IAAI,YAAYuB,IAAZ,CAAiBxD,IAAI,CAACqD,KAAL,CAAWpB,CAAX,CAAjB,CAAJ,EAAqC;AACxCjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,MAAhB;AACH,WAFM,MAEA;AACHjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,IAAhB;AACH;AACJ;;AAED,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjC,IAAI,CAACuD,KAAL,CAAWd,MAA3B,EAAmCR,CAAC,EAApC,EAAwC;AACpCjC,UAAAA,IAAI,CAACuD,KAAL,CAAWtB,CAAX,IAAgBmB,UAAU,CAACpD,IAAI,CAACuD,KAAL,CAAWtB,CAAX,CAAD,EAAgBjC,IAAI,CAACmD,MAAL,CAAYV,MAA5B,CAA1B;AACH;;AAED,aAAK9B,MAAL,CAAY+B,IAAZ,CAAiB1C,IAAjB;AAEA;AACH;AACJ,KArFO,CAuFR;;;AACA,QAAI0B,GAAG,GAAG,KAAKT,KAAL,CAAWnC,EAAX,CAAcyD,IAAd,CAAmBpB,GAAnB,CAAV,EAAmC;AAC/BA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE;AADO,OAAjB;AAGA;AACH,KA9FO,CAgGR;;;AACA,QAAIjB,GAAG,GAAG,KAAKT,KAAL,CAAWjC,UAAX,CAAsBuD,IAAtB,CAA2BpB,GAA3B,CAAV,EAA2C;AACvCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AAEA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE;AADO,OAAjB;AAIAjB,MAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,UAAf,EAA2B,EAA3B,CAAN,CAPuC,CASvC;AACA;AACA;;AACA,WAAKyB,KAAL,CAAWI,GAAX,EAAgBH,GAAhB;AAEA,WAAKZ,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE;AADO,OAAjB;AAIA;AACH,KApHO,CAsHR;;;AACA,QAAIjB,GAAG,GAAG,KAAKT,KAAL,CAAWhC,IAAX,CAAgBsD,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACAd,MAAAA,IAAI,GAAGD,GAAG,CAAC,CAAD,CAAV;AACAU,MAAAA,SAAS,GAAGT,IAAI,CAACc,MAAL,GAAc,CAA1B;AAEAZ,MAAAA,SAAS,GAAG;AACRc,QAAAA,IAAI,EAAE,YADE;AAERc,QAAAA,OAAO,EAAErB,SAFD;AAGRsB,QAAAA,KAAK,EAAEtB,SAAS,GAAG,CAACT,IAAJ,GAAW,EAHnB;AAIRF,QAAAA,KAAK,EAAE;AAJC,OAAZ;AAMA,WAAKd,MAAL,CAAY+B,IAAZ,CAAiBb,SAAjB,EAXiC,CAajC;;AACAH,MAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,CAAOiC,KAAP,CAAa,KAAK1C,KAAL,CAAWjB,IAAxB,CAAN;AAEA8B,MAAAA,SAAS,GAAG,EAAZ;AACAN,MAAAA,IAAI,GAAG,KAAP;AACAW,MAAAA,CAAC,GAAGT,GAAG,CAACe,MAAR;AACAR,MAAAA,CAAC,GAAG,CAAJ;;AAEA,aAAOA,CAAC,GAAGE,CAAX,EAAcF,CAAC,EAAf,EAAmB;AACfjC,QAAAA,IAAI,GAAG0B,GAAG,CAACO,CAAD,CAAV,CADe,CAGf;AACA;;AACAD,QAAAA,KAAK,GAAGhC,IAAI,CAACyC,MAAb;AACAzC,QAAAA,IAAI,GAAGA,IAAI,CAACH,OAAL,CAAa,oBAAb,EAAmC,EAAnC,CAAP,CANe,CAQf;AACA;;AACA,YAAI,CAACG,IAAI,CAAC4D,OAAL,CAAa,KAAb,CAAL,EAA0B;AACtB5B,UAAAA,KAAK,IAAIhC,IAAI,CAACyC,MAAd;AACAzC,UAAAA,IAAI,GAAG,CAAC,KAAKU,OAAL,CAAaF,QAAd,GACDR,IAAI,CAACH,OAAL,CAAa,IAAIgE,MAAJ,CAAW,UAAU7B,KAAV,GAAkB,GAA7B,EAAkC,IAAlC,CAAb,EAAsD,EAAtD,CADC,GAEDhC,IAAI,CAACH,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAFN;AAGH,SAfc,CAiBf;AACA;;;AACA,YAAIoC,CAAC,KAAKE,CAAC,GAAG,CAAd,EAAiB;AACbP,UAAAA,CAAC,GAAGlD,KAAK,CAACqB,MAAN,CAAawC,IAAb,CAAkBb,GAAG,CAACO,CAAC,GAAG,CAAL,CAArB,EAA8B,CAA9B,CAAJ;;AACA,cAAIN,IAAI,CAACc,MAAL,GAAc,CAAd,GAAkBb,CAAC,CAACa,MAAF,KAAa,CAA/B,GACGb,CAAC,CAACa,MAAF,GAAW,CAAX,IAAiB,KAAK/B,OAAL,CAAaoD,UAAb,IAA2BlC,CAAC,KAAKD,IADzD,EACiE;AAC7DR,YAAAA,GAAG,GAAGO,GAAG,CAACqC,KAAJ,CAAU9B,CAAC,GAAG,CAAd,EAAiB+B,IAAjB,CAAsB,IAAtB,IAA8B7C,GAApC;AACAc,YAAAA,CAAC,GAAGE,CAAC,GAAG,CAAR;AACH;AACJ,SA1Bc,CA4Bf;AACA;AACA;;;AACAV,QAAAA,KAAK,GAAGD,IAAI,IAAI,eAAegC,IAAf,CAAoBxD,IAApB,CAAhB;;AACA,YAAIiC,CAAC,KAAKE,CAAC,GAAG,CAAd,EAAiB;AACbX,UAAAA,IAAI,GAAGxB,IAAI,CAACiE,MAAL,CAAYjE,IAAI,CAACyC,MAAL,GAAc,CAA1B,MAAiC,IAAxC;AACA,cAAI,CAAChB,KAAL,EAAYA,KAAK,GAAGD,IAAR;AACf;;AAED,YAAIC,KAAJ,EAAW;AACPI,UAAAA,SAAS,CAACJ,KAAV,GAAkB,IAAlB;AACH,SAvCc,CAyCf;;;AACAY,QAAAA,MAAM,GAAG,cAAcmB,IAAd,CAAmBxD,IAAnB,CAAT;AACAsC,QAAAA,SAAS,GAAG4B,SAAZ;;AACA,YAAI7B,MAAJ,EAAY;AACRC,UAAAA,SAAS,GAAGtC,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAxB;AACAA,UAAAA,IAAI,GAAGA,IAAI,CAACH,OAAL,CAAa,cAAb,EAA6B,EAA7B,CAAP;AACH;;AAEDkC,QAAAA,CAAC,GAAG;AACAY,UAAAA,IAAI,EAAE,iBADN;AAEAwB,UAAAA,IAAI,EAAE9B,MAFN;AAGA+B,UAAAA,OAAO,EAAE9B,SAHT;AAIAb,UAAAA,KAAK,EAAEA;AAJP,SAAJ;AAOAK,QAAAA,SAAS,CAACY,IAAV,CAAeX,CAAf;AACA,aAAKpB,MAAL,CAAY+B,IAAZ,CAAiBX,CAAjB,EAzDe,CA2Df;;AACA,aAAKT,KAAL,CAAWtB,IAAX,EAAiB,KAAjB;AAEA,aAAKW,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,UAAAA,IAAI,EAAE;AADO,SAAjB;AAGH;;AAED,UAAId,SAAS,CAACJ,KAAd,EAAqB;AACjBU,QAAAA,CAAC,GAAGL,SAAS,CAACW,MAAd;AACAR,QAAAA,CAAC,GAAG,CAAJ;;AACA,eAAOA,CAAC,GAAGE,CAAX,EAAcF,CAAC,EAAf,EAAmB;AACfH,UAAAA,SAAS,CAACG,CAAD,CAAT,CAAaR,KAAb,GAAqB,IAArB;AACH;AACJ;;AAED,WAAKd,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE;AADO,OAAjB;AAIA;AACH,KA5NO,CA8NR;;;AACA,QAAIjB,GAAG,GAAG,KAAKT,KAAL,CAAW/B,IAAX,CAAgBqD,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE,KAAKjC,OAAL,CAAa2D,QAAb,GACA,WADA,GAEA,MAHO;AAIbC,QAAAA,GAAG,EAAE,CAAC,KAAK5D,OAAL,CAAa6D,SAAd,KACG7C,GAAG,CAAC,CAAD,CAAH,KAAW,KAAX,IAAoBA,GAAG,CAAC,CAAD,CAAH,KAAW,QAA/B,IAA2CA,GAAG,CAAC,CAAD,CAAH,KAAW,OADzD,CAJQ;AAMbjC,QAAAA,IAAI,EAAE,KAAKiB,OAAL,CAAa2D,QAAb,GAAyB,KAAK3D,OAAL,CAAa6D,SAAb,GAAyB,KAAK7D,OAAL,CAAa6D,SAAb,CAAuB7C,GAAG,CAAC,CAAD,CAA1B,CAAzB,GAA0D8C,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAzF,GAAqGA,GAAG,CAAC,CAAD;AANjG,OAAjB;AAQA;AACH,KA1OO,CA4OR;;;AACA,QAAIH,GAAG,KAAKG,GAAG,GAAG,KAAKT,KAAL,CAAW9B,GAAX,CAAeoD,IAAf,CAAoBpB,GAApB,CAAX,CAAP,EAA6C;AACzCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,UAAIf,GAAG,CAAC,CAAD,CAAP,EAAYA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOc,SAAP,CAAiB,CAAjB,EAAoBd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAAP,GAAgB,CAApC,CAAT;AACZP,MAAAA,GAAG,GAAGR,GAAG,CAAC,CAAD,CAAH,CAAO+C,WAAP,GAAqB5E,OAArB,CAA6B,MAA7B,EAAqC,GAArC,CAAN;;AACA,UAAI,CAAC,KAAKc,MAAL,CAAYC,KAAZ,CAAkBsB,GAAlB,CAAL,EAA6B;AACzB,aAAKvB,MAAL,CAAYC,KAAZ,CAAkBsB,GAAlB,IAAyB;AACrBwC,UAAAA,IAAI,EAAEhD,GAAG,CAAC,CAAD,CADY;AAErBiD,UAAAA,KAAK,EAAEjD,GAAG,CAAC,CAAD;AAFW,SAAzB;AAIH;;AACD;AACH,KAxPO,CA0PR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAW3B,KAAX,CAAiBiD,IAAjB,CAAsBpB,GAAtB,CAAV,EAAsC;AAClCnB,MAAAA,IAAI,GAAG;AACH2C,QAAAA,IAAI,EAAE,OADH;AAEHQ,QAAAA,MAAM,EAAEC,UAAU,CAAC1B,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,cAAf,EAA+B,EAA/B,CAAD,CAFf;AAGHwD,QAAAA,KAAK,EAAE3B,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,YAAf,EAA6B,EAA7B,EAAiCyD,KAAjC,CAAuC,QAAvC,CAHJ;AAIHC,QAAAA,KAAK,EAAE7B,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAO7B,OAAP,CAAe,KAAf,EAAsB,EAAtB,EAA0ByD,KAA1B,CAAgC,IAAhC,CAAT,GAAiD;AAJrD,OAAP;;AAOA,UAAItD,IAAI,CAACmD,MAAL,CAAYV,MAAZ,KAAuBzC,IAAI,CAACqD,KAAL,CAAWZ,MAAtC,EAA8C;AAC1CtB,QAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;;AAEA,aAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjC,IAAI,CAACqD,KAAL,CAAWZ,MAA3B,EAAmCR,CAAC,EAApC,EAAwC;AACpC,cAAI,YAAYuB,IAAZ,CAAiBxD,IAAI,CAACqD,KAAL,CAAWpB,CAAX,CAAjB,CAAJ,EAAqC;AACjCjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,OAAhB;AACH,WAFD,MAEO,IAAI,aAAauB,IAAb,CAAkBxD,IAAI,CAACqD,KAAL,CAAWpB,CAAX,CAAlB,CAAJ,EAAsC;AACzCjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,QAAhB;AACH,WAFM,MAEA,IAAI,YAAYuB,IAAZ,CAAiBxD,IAAI,CAACqD,KAAL,CAAWpB,CAAX,CAAjB,CAAJ,EAAqC;AACxCjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,MAAhB;AACH,WAFM,MAEA;AACHjC,YAAAA,IAAI,CAACqD,KAAL,CAAWpB,CAAX,IAAgB,IAAhB;AACH;AACJ;;AAED,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjC,IAAI,CAACuD,KAAL,CAAWd,MAA3B,EAAmCR,CAAC,EAApC,EAAwC;AACpCjC,UAAAA,IAAI,CAACuD,KAAL,CAAWtB,CAAX,IAAgBmB,UAAU,CACtBpD,IAAI,CAACuD,KAAL,CAAWtB,CAAX,EAAcpC,OAAd,CAAsB,kBAAtB,EAA0C,EAA1C,CADsB,EAEtBG,IAAI,CAACmD,MAAL,CAAYV,MAFU,CAA1B;AAGH;;AAED,aAAK9B,MAAL,CAAY+B,IAAZ,CAAiB1C,IAAjB;AAEA;AACH;AACJ,KA5RO,CA8RR;;;AACA,QAAI0B,GAAG,GAAG,KAAKT,KAAL,CAAW1B,QAAX,CAAoBgD,IAApB,CAAyBpB,GAAzB,CAAV,EAAyC;AACrCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE,SADO;AAEbO,QAAAA,KAAK,EAAExB,GAAG,CAAC,CAAD,CAAH,CAAOuC,MAAP,CAAc,CAAd,MAAqB,GAArB,GAA2B,CAA3B,GAA+B,CAFzB;AAGbxE,QAAAA,IAAI,EAAEiC,GAAG,CAAC,CAAD;AAHI,OAAjB;AAKA;AACH,KAvSO,CAySR;;;AACA,QAAIH,GAAG,KAAKG,GAAG,GAAG,KAAKT,KAAL,CAAWb,SAAX,CAAqBmC,IAArB,CAA0BpB,GAA1B,CAAX,CAAP,EAAmD;AAC/CA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE,WADO;AAEblD,QAAAA,IAAI,EAAEiC,GAAG,CAAC,CAAD,CAAH,CAAOuC,MAAP,CAAcvC,GAAG,CAAC,CAAD,CAAH,CAAOe,MAAP,GAAgB,CAA9B,MAAqC,IAArC,GACAf,GAAG,CAAC,CAAD,CAAH,CAAOqC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CADA,GAEArC,GAAG,CAAC,CAAD;AAJI,OAAjB;AAMA;AACH;;AACD,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWxB,IAAX,CAAgB8C,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK9B,MAAL,CAAY+B,IAAZ,CAAiB;AACbC,QAAAA,IAAI,EAAE,MADO;AAEblD,QAAAA,IAAI,EAAEiC,GAAG,CAAC,CAAD;AAFI,OAAjB;AAIA;AACH;;AAED,QAAIP,GAAJ,EAAS;AACL,YAAM,IAAIyD,KAAJ,CAAU,4BAA4BzD,GAAG,CAAC0D,UAAJ,CAAe,CAAf,CAAtC,CAAN;AACH;AACJ;;AACD,SAAO,KAAKlE,MAAZ;AACH,CArVD;AAuVA;;;;;AAIA,IAAImE,MAAM,GAAG;AACTN,EAAAA,MAAM,EAAE,6CADC;AAETO,EAAAA,QAAQ,EAAE,qCAFD;AAGTC,EAAAA,GAAG,EAAE3F,IAHI;AAIT6C,EAAAA,GAAG,EAAE,aACC,2BADD,CAC6B;AAD7B,IAEC,0CAFD,CAE4C;AAF5C,IAGC,sBAHD,CAGwB;AAHxB,IAIC,6BAJD,CAI+B;AAJ/B,IAKC,kCATG;AASiC;AAC1C+C,EAAAA,IAAI,EAAE,+CAVG;AAWTC,EAAAA,OAAO,EAAE,uDAXA;AAYTC,EAAAA,MAAM,EAAE,+DAZC;AAaTC,EAAAA,MAAM,EAAE,+GAbC;AAcTC,EAAAA,EAAE,EAAE,mOAdK;AAeTzG,EAAAA,IAAI,EAAE,qCAfG;AAgBT0G,EAAAA,EAAE,EAAE,uBAhBK;AAiBTC,EAAAA,GAAG,EAAElG,IAjBI;AAkBTI,EAAAA,IAAI,EAAE;AAlBG,CAAb,C,CAqBA;AACA;;AACAqF,MAAM,CAACU,YAAP,GAAsB,oCAAtB;AACAV,MAAM,CAACO,EAAP,GAAYzF,IAAI,CAACkF,MAAM,CAACO,EAAR,CAAJ,CAAgBxF,OAAhB,CAAwB,cAAxB,EAAwCiF,MAAM,CAACU,YAA/C,EAA6D1F,QAA7D,EAAZ;AAEAgF,MAAM,CAACW,QAAP,GAAkB,6CAAlB;AAEAX,MAAM,CAACY,OAAP,GAAiB,8BAAjB;AACAZ,MAAM,CAACa,MAAP,GAAgB,8IAAhB;AACAb,MAAM,CAACC,QAAP,GAAkBnF,IAAI,CAACkF,MAAM,CAACC,QAAR,CAAJ,CACblF,OADa,CACL,QADK,EACKiF,MAAM,CAACY,OADZ,EAEb7F,OAFa,CAEL,OAFK,EAEIiF,MAAM,CAACa,MAFX,EAGb7F,QAHa,EAAlB;AAKAgF,MAAM,CAACc,UAAP,GAAoB,6EAApB;AAEAd,MAAM,CAAC5C,GAAP,GAAatC,IAAI,CAACkF,MAAM,CAAC5C,GAAR,CAAJ,CACRrC,OADQ,CACA,SADA,EACWnB,KAAK,CAACyB,QADjB,EAERN,OAFQ,CAEA,WAFA,EAEaiF,MAAM,CAACc,UAFpB,EAGR9F,QAHQ,EAAb;AAKAgF,MAAM,CAACpF,MAAP,GAAgB,2CAAhB;AACAoF,MAAM,CAACe,KAAP,GAAe,0CAAf;AACAf,MAAM,CAACnF,MAAP,GAAgB,6DAAhB;AAEAmF,MAAM,CAACG,IAAP,GAAcrF,IAAI,CAACkF,MAAM,CAACG,IAAR,CAAJ,CACTpF,OADS,CACD,OADC,EACQiF,MAAM,CAACpF,MADf,EAETG,OAFS,CAED,MAFC,EAEOiF,MAAM,CAACe,KAFd,EAGThG,OAHS,CAGD,OAHC,EAGQiF,MAAM,CAACnF,MAHf,EAITG,QAJS,EAAd;AAMAgF,MAAM,CAACI,OAAP,GAAiBtF,IAAI,CAACkF,MAAM,CAACI,OAAR,CAAJ,CACZrF,OADY,CACJ,OADI,EACKiF,MAAM,CAACpF,MADZ,EAEZI,QAFY,EAAjB;AAIA;;;;AAIAgF,MAAM,CAACzE,MAAP,GAAgBC,KAAK,CAAC,EAAD,EAAKwE,MAAL,CAArB;AAEA;;;;AAIAA,MAAM,CAACtE,QAAP,GAAkBF,KAAK,CAAC,EAAD,EAAKwE,MAAM,CAACzE,MAAZ,EAAoB;AACvC+E,EAAAA,MAAM,EAAE,gEAD+B;AAEvCC,EAAAA,EAAE,EAAE,0DAFmC;AAGvCJ,EAAAA,IAAI,EAAErF,IAAI,CAAC,yBAAD,CAAJ,CACDC,OADC,CACO,OADP,EACgBiF,MAAM,CAACpF,MADvB,EAEDI,QAFC,EAHiC;AAMvCoF,EAAAA,OAAO,EAAEtF,IAAI,CAAC,+BAAD,CAAJ,CACJC,OADI,CACI,OADJ,EACaiF,MAAM,CAACpF,MADpB,EAEJI,QAFI;AAN8B,CAApB,CAAvB;AAWA;;;;AAIAgF,MAAM,CAACvE,GAAP,GAAaD,KAAK,CAAC,EAAD,EAAKwE,MAAM,CAACzE,MAAZ,EAAoB;AAClCmE,EAAAA,MAAM,EAAE5E,IAAI,CAACkF,MAAM,CAACN,MAAR,CAAJ,CAAoB3E,OAApB,CAA4B,IAA5B,EAAkC,MAAlC,EAA0CC,QAA1C,EAD0B;AAElCgG,EAAAA,eAAe,EAAE,2EAFiB;AAGlCd,EAAAA,GAAG,EAAE,kEAH6B;AAIlCe,EAAAA,UAAU,EAAE,wEAJsB;AAKlCR,EAAAA,GAAG,EAAE,yBAL6B;AAMlC9F,EAAAA,IAAI,EAAE;AAN4B,CAApB,CAAlB;AASAqF,MAAM,CAACvE,GAAP,CAAWyE,GAAX,GAAiBpF,IAAI,CAACkF,MAAM,CAACvE,GAAP,CAAWyE,GAAZ,EAAiB,GAAjB,CAAJ,CACZnF,OADY,CACJ,OADI,EACKiF,MAAM,CAACvE,GAAP,CAAWuF,eADhB,EAEZhG,QAFY,EAAjB;AAGA;;;;AAIAgF,MAAM,CAACkB,MAAP,GAAgB1F,KAAK,CAAC,EAAD,EAAKwE,MAAM,CAACvE,GAAZ,EAAiB;AAClC+E,EAAAA,EAAE,EAAE1F,IAAI,CAACkF,MAAM,CAACQ,EAAR,CAAJ,CAAgBzF,OAAhB,CAAwB,MAAxB,EAAgC,GAAhC,EAAqCC,QAArC,EAD8B;AAElCL,EAAAA,IAAI,EAAEG,IAAI,CAACkF,MAAM,CAACvE,GAAP,CAAWd,IAAZ,CAAJ,CACDI,OADC,CACO,MADP,EACe,eADf,EAEDA,OAFC,CAEO,SAFP,EAEkB,GAFlB,EAGDC,QAHC;AAF4B,CAAjB,CAArB;AAQA;;;;AAIA,SAASmG,WAAT,CAAqBrF,KAArB,EAA4BF,OAA5B,EAAqC;AACjC,OAAKA,OAAL,GAAeA,OAAO,IAAIK,KAAK,CAACC,QAAhC;AACA,OAAKJ,KAAL,GAAaA,KAAb;AACA,OAAKK,KAAL,GAAa6D,MAAM,CAACzE,MAApB;AACA,OAAK6F,QAAL,GAAgB,KAAKxF,OAAL,CAAawF,QAAb,IAAyB,IAAIC,QAAJ,EAAzC;AACA,OAAKD,QAAL,CAAcxF,OAAd,GAAwB,KAAKA,OAA7B;;AAEA,MAAI,CAAC,KAAKE,KAAV,EAAiB;AACb,UAAM,IAAIgE,KAAJ,CAAU,2CAAV,CAAN;AACH;;AAED,MAAI,KAAKlE,OAAL,CAAaF,QAAjB,EAA2B;AACvB,SAAKS,KAAL,GAAa6D,MAAM,CAACtE,QAApB;AACH,GAFD,MAEO,IAAI,KAAKE,OAAL,CAAaH,GAAjB,EAAsB;AACzB,QAAI,KAAKG,OAAL,CAAasF,MAAjB,EAAyB;AACrB,WAAK/E,KAAL,GAAa6D,MAAM,CAACkB,MAApB;AACH,KAFD,MAEO;AACH,WAAK/E,KAAL,GAAa6D,MAAM,CAACvE,GAApB;AACH;AACJ;AACJ;AAED;;;;;AAIA0F,WAAW,CAAChF,KAAZ,GAAoB6D,MAApB;AAEA;;;;AAIAmB,WAAW,CAACG,MAAZ,GAAqB,UAAUjF,GAAV,EAAeP,KAAf,EAAsBF,OAAtB,EAA+B;AAChD,MAAIoE,MAAM,GAAG,IAAImB,WAAJ,CAAgBrF,KAAhB,EAAuBF,OAAvB,CAAb;AACA,SAAOoE,MAAM,CAACsB,MAAP,CAAcjF,GAAd,CAAP;AACH,CAHD;AAKA;;;;;AAIA8E,WAAW,CAAC5E,SAAZ,CAAsB+E,MAAtB,GAA+B,UAAUjF,GAAV,EAAe;AAC1C,MAAIkF,GAAG,GAAG,EAAV;AAAA,MACIpB,IADJ;AAAA,MAEIxF,IAFJ;AAAA,MAGIiF,IAHJ;AAAA,MAIIC,KAJJ;AAAA,MAKIjD,GALJ;AAAA,MAMI4E,WANJ;;AAQA,SAAOnF,GAAP,EAAY;AACR;AACA,QAAIO,GAAG,GAAG,KAAKT,KAAL,CAAWuD,MAAX,CAAkBjC,IAAlB,CAAuBpB,GAAvB,CAAV,EAAuC;AACnCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI7B,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAb;AACA;AACH,KANO,CAQR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWiB,GAAX,CAAeK,IAAf,CAAoBpB,GAApB,CAAV,EAAoC;AAChC,UAAI,CAAC,KAAKoF,MAAN,IAAgB,QAAQ/C,IAAR,CAAa9B,GAAG,CAAC,CAAD,CAAhB,CAApB,EAA0C;AACtC,aAAK6E,MAAL,GAAc,IAAd;AACH,OAFD,MAEO,IAAI,KAAKA,MAAL,IAAe,UAAU/C,IAAV,CAAe9B,GAAG,CAAC,CAAD,CAAlB,CAAnB,EAA2C;AAC9C,aAAK6E,MAAL,GAAc,KAAd;AACH;;AACD,UAAI,CAAC,KAAKC,UAAN,IAAoB,iCAAiChD,IAAjC,CAAsC9B,GAAG,CAAC,CAAD,CAAzC,CAAxB,EAAuE;AACnE,aAAK8E,UAAL,GAAkB,IAAlB;AACH,OAFD,MAEO,IAAI,KAAKA,UAAL,IAAmB,mCAAmChD,IAAnC,CAAwC9B,GAAG,CAAC,CAAD,CAA3C,CAAvB,EAAwE;AAC3E,aAAK8E,UAAL,GAAkB,KAAlB;AACH;;AAEDrF,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAK3F,OAAL,CAAa2D,QAAb,GACD,KAAK3D,OAAL,CAAa6D,SAAb,GACI,KAAK7D,OAAL,CAAa6D,SAAb,CAAuB7C,GAAG,CAAC,CAAD,CAA1B,CADJ,GAEI8C,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAHT,GAIDA,GAAG,CAAC,CAAD,CAJT;AAKA;AACH,KA5BO,CA8BR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWgE,IAAX,CAAgB1C,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjC,UAAIsF,cAAc,GAAGC,kBAAkB,CAAChF,GAAG,CAAC,CAAD,CAAJ,EAAS,IAAT,CAAvC;;AACA,UAAI+E,cAAc,GAAG,CAAC,CAAtB,EAAyB;AACrB,YAAIE,OAAO,GAAG,IAAIjF,GAAG,CAAC,CAAD,CAAH,CAAOe,MAAX,GAAoBgE,cAAlC;AACA/E,QAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOc,SAAP,CAAiB,CAAjB,EAAoBiE,cAApB,CAAT;AACA/E,QAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOc,SAAP,CAAiB,CAAjB,EAAoBmE,OAApB,EAA6B1D,IAA7B,EAAT;AACAvB,QAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAT;AACH;;AACDP,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA,WAAK8D,MAAL,GAAc,IAAd;AACA7B,MAAAA,IAAI,GAAGhD,GAAG,CAAC,CAAD,CAAV;;AACA,UAAI,KAAKhB,OAAL,CAAaF,QAAjB,EAA2B;AACvByE,QAAAA,IAAI,GAAG,gCAAgC1C,IAAhC,CAAqCmC,IAArC,CAAP;;AAEA,YAAIO,IAAJ,EAAU;AACNP,UAAAA,IAAI,GAAGO,IAAI,CAAC,CAAD,CAAX;AACAN,UAAAA,KAAK,GAAGM,IAAI,CAAC,CAAD,CAAZ;AACH,SAHD,MAGO;AACHN,UAAAA,KAAK,GAAG,EAAR;AACH;AACJ,OATD,MASO;AACHA,QAAAA,KAAK,GAAGjD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOqC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT,GAA+B,EAAvC;AACH;;AACDW,MAAAA,IAAI,GAAGA,IAAI,CAACzB,IAAL,GAAYpD,OAAZ,CAAoB,eAApB,EAAqC,IAArC,CAAP;AACAwG,MAAAA,GAAG,IAAI,KAAKO,UAAL,CAAgBlF,GAAhB,EAAqB;AACxBgD,QAAAA,IAAI,EAAEuB,WAAW,CAACY,OAAZ,CAAoBnC,IAApB,CADkB;AAExBC,QAAAA,KAAK,EAAEsB,WAAW,CAACY,OAAZ,CAAoBlC,KAApB;AAFiB,OAArB,CAAP;AAIA,WAAK4B,MAAL,GAAc,KAAd;AACA;AACH,KA7DO,CA+DR;;;AACA,QAAI,CAAC7E,GAAG,GAAG,KAAKT,KAAL,CAAWiE,OAAX,CAAmB3C,IAAnB,CAAwBpB,GAAxB,CAAP,MACIO,GAAG,GAAG,KAAKT,KAAL,CAAWkE,MAAX,CAAkB5C,IAAlB,CAAuBpB,GAAvB,CADV,CAAJ,EAC4C;AACxCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACAwC,MAAAA,IAAI,GAAG,CAACvD,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAd,EAAmB7B,OAAnB,CAA2B,MAA3B,EAAmC,GAAnC,CAAP;AACAoF,MAAAA,IAAI,GAAG,KAAKrE,KAAL,CAAWqE,IAAI,CAACR,WAAL,EAAX,CAAP;;AACA,UAAI,CAACQ,IAAD,IAAS,CAACA,IAAI,CAACP,IAAnB,EAAyB;AACrB2B,QAAAA,GAAG,IAAI3E,GAAG,CAAC,CAAD,CAAH,CAAOuC,MAAP,CAAc,CAAd,CAAP;AACA9C,QAAAA,GAAG,GAAGO,GAAG,CAAC,CAAD,CAAH,CAAOc,SAAP,CAAiB,CAAjB,IAAsBrB,GAA5B;AACA;AACH;;AACD,WAAKoF,MAAL,GAAc,IAAd;AACAF,MAAAA,GAAG,IAAI,KAAKO,UAAL,CAAgBlF,GAAhB,EAAqBuD,IAArB,CAAP;AACA,WAAKsB,MAAL,GAAc,KAAd;AACA;AACH,KA9EO,CAgFR;;;AACA,QAAI7E,GAAG,GAAG,KAAKT,KAAL,CAAWmE,MAAX,CAAkB7C,IAAlB,CAAuBpB,GAAvB,CAAV,EAAuC;AACnCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcd,MAAd,CAAqB,KAAKgB,MAAL,CAAY1E,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAb,IAAoBA,GAAG,CAAC,CAAD,CAAvB,IAA8BA,GAAG,CAAC,CAAD,CAA7C,CAArB,CAAP;AACA;AACH,KArFO,CAuFR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWoE,EAAX,CAAc9C,IAAd,CAAmBpB,GAAnB,CAAV,EAAmC;AAC/BA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcb,EAAd,CAAiB,KAAKe,MAAL,CAAY1E,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAb,IAAoBA,GAAG,CAAC,CAAD,CAAvB,IAA8BA,GAAG,CAAC,CAAD,CAAjC,IAAwCA,GAAG,CAAC,CAAD,CAA3C,IAAkDA,GAAG,CAAC,CAAD,CAAjE,CAAjB,CAAP;AACA;AACH,KA5FO,CA8FR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAWrC,IAAX,CAAgB2D,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcY,QAAd,CAAuBtC,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAH,CAAOuB,IAAP,EAAD,EAAgB,IAAhB,CAA7B,CAAP;AACA;AACH,KAnGO,CAqGR;;;AACA,QAAIvB,GAAG,GAAG,KAAKT,KAAL,CAAWqE,EAAX,CAAc/C,IAAd,CAAmBpB,GAAnB,CAAV,EAAmC;AAC/BA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcZ,EAAd,EAAP;AACA;AACH,KA1GO,CA4GR;;;AACA,QAAI5D,GAAG,GAAG,KAAKT,KAAL,CAAWsE,GAAX,CAAehD,IAAf,CAAoBpB,GAApB,CAAV,EAAoC;AAChCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcX,GAAd,CAAkB,KAAKa,MAAL,CAAY1E,GAAG,CAAC,CAAD,CAAf,CAAlB,CAAP;AACA;AACH,KAjHO,CAmHR;;;AACA,QAAIA,GAAG,GAAG,KAAKT,KAAL,CAAW8D,QAAX,CAAoBxC,IAApB,CAAyBpB,GAAzB,CAAV,EAAyC;AACrCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;;AACA,UAAIf,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAChBjC,QAAAA,IAAI,GAAG+E,MAAM,CAAC,KAAKuC,MAAL,CAAYrF,GAAG,CAAC,CAAD,CAAf,CAAD,CAAb;AACAgD,QAAAA,IAAI,GAAG,YAAYjF,IAAnB;AACH,OAHD,MAGO;AACHA,QAAAA,IAAI,GAAG+E,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAb;AACAgD,QAAAA,IAAI,GAAGjF,IAAP;AACH;;AACD4G,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcjB,IAAd,CAAmBP,IAAnB,EAAyB,IAAzB,EAA+BjF,IAA/B,CAAP;AACA;AACH,KA/HO,CAiIR;;;AACA,QAAI,CAAC,KAAK8G,MAAN,KAAiB7E,GAAG,GAAG,KAAKT,KAAL,CAAW+D,GAAX,CAAezC,IAAf,CAAoBpB,GAApB,CAAvB,CAAJ,EAAsD;AAClD,UAAIO,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAChBjC,QAAAA,IAAI,GAAG+E,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAb;AACAgD,QAAAA,IAAI,GAAG,YAAYjF,IAAnB;AACH,OAHD,MAGO;AACH;AACA,WAAG;AACC6G,UAAAA,WAAW,GAAG5E,GAAG,CAAC,CAAD,CAAjB;AACAA,UAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKT,KAAL,CAAW8E,UAAX,CAAsBxD,IAAtB,CAA2Bb,GAAG,CAAC,CAAD,CAA9B,EAAmC,CAAnC,CAAT;AACH,SAHD,QAGS4E,WAAW,KAAK5E,GAAG,CAAC,CAAD,CAH5B;;AAIAjC,QAAAA,IAAI,GAAG+E,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAb;;AACA,YAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,MAAf,EAAuB;AACnBgD,UAAAA,IAAI,GAAG,YAAYjF,IAAnB;AACH,SAFD,MAEO;AACHiF,UAAAA,IAAI,GAAGjF,IAAP;AACH;AACJ;;AACD0B,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;AACA4D,MAAAA,GAAG,IAAI,KAAKH,QAAL,CAAcjB,IAAd,CAAmBP,IAAnB,EAAyB,IAAzB,EAA+BjF,IAA/B,CAAP;AACA;AACH,KAtJO,CAwJR;;;AACA,QAAIiC,GAAG,GAAG,KAAKT,KAAL,CAAWxB,IAAX,CAAgB8C,IAAhB,CAAqBpB,GAArB,CAAV,EAAqC;AACjCA,MAAAA,GAAG,GAAGA,GAAG,CAACqB,SAAJ,CAAcd,GAAG,CAAC,CAAD,CAAH,CAAOe,MAArB,CAAN;;AACA,UAAI,KAAK+D,UAAT,EAAqB;AACjBH,QAAAA,GAAG,IAAI,KAAKH,QAAL,CAAczG,IAAd,CAAmB,KAAKiB,OAAL,CAAa2D,QAAb,GAAyB,KAAK3D,OAAL,CAAa6D,SAAb,GAAyB,KAAK7D,OAAL,CAAa6D,SAAb,CAAuB7C,GAAG,CAAC,CAAD,CAA1B,CAAzB,GAA0D8C,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAzF,GAAqGA,GAAG,CAAC,CAAD,CAA3H,CAAP;AACH,OAFD,MAEO;AACH2E,QAAAA,GAAG,IAAI,KAAKH,QAAL,CAAczG,IAAd,CAAmB+E,MAAM,CAAC,KAAKwC,WAAL,CAAiBtF,GAAG,CAAC,CAAD,CAApB,CAAD,CAAzB,CAAP;AACH;;AACD;AACH;;AAED,QAAIP,GAAJ,EAAS;AACL,YAAM,IAAIyD,KAAJ,CAAU,4BAA4BzD,GAAG,CAAC0D,UAAJ,CAAe,CAAf,CAAtC,CAAN;AACH;AACJ;;AAED,SAAOwB,GAAP;AACH,CAlLD;;AAoLAJ,WAAW,CAACY,OAAZ,GAAsB,UAAUpH,IAAV,EAAgB;AAClC,SAAOA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAaoG,WAAW,CAAChF,KAAZ,CAAkBwE,QAA/B,EAAyC,IAAzC,CAAH,GAAoDhG,IAA/D;AACH,CAFD;AAIA;;;;;AAIAwG,WAAW,CAAC5E,SAAZ,CAAsBuF,UAAtB,GAAmC,UAAUlF,GAAV,EAAeuD,IAAf,EAAqB;AACpD,MAAIP,IAAI,GAAGO,IAAI,CAACP,IAAhB;AAAA,MACIC,KAAK,GAAGM,IAAI,CAACN,KAAL,GAAaH,MAAM,CAACS,IAAI,CAACN,KAAN,CAAnB,GAAkC,IAD9C;AAGA,SAAOjD,GAAG,CAAC,CAAD,CAAH,CAAOuC,MAAP,CAAc,CAAd,MAAqB,GAArB,GACD,KAAKiC,QAAL,CAAcjB,IAAd,CAAmBP,IAAnB,EAAyBC,KAAzB,EAAgC,KAAKyB,MAAL,CAAY1E,GAAG,CAAC,CAAD,CAAf,CAAhC,CADC,GAED,KAAKwE,QAAL,CAAce,KAAd,CAAoBvC,IAApB,EAA0BC,KAA1B,EAAiCH,MAAM,CAAC9C,GAAG,CAAC,CAAD,CAAJ,CAAvC,CAFN;AAGH,CAPD;AASA;;;;;AAIAuE,WAAW,CAAC5E,SAAZ,CAAsB2F,WAAtB,GAAoC,UAAUvH,IAAV,EAAgB;AAChD,MAAI,CAAC,KAAKiB,OAAL,CAAasG,WAAlB,EAA+B,OAAOvH,IAAP;AAC/B,SAAOA,IAAI,CACX;AADW,GAENI,OAFE,CAEM,MAFN,EAEc,QAFd,EAGH;AAHG,GAIFA,OAJE,CAIM,KAJN,EAIa,QAJb,EAKH;AALG,GAMFA,OANE,CAMM,yBANN,EAMiC,UANjC,EAOH;AAPG,GAQFA,OARE,CAQM,IARN,EAQY,QARZ,EASH;AATG,GAUFA,OAVE,CAUM,8BAVN,EAUsC,UAVtC,EAWH;AAXG,GAYFA,OAZE,CAYM,IAZN,EAYY,QAZZ,EAaH;AAbG,GAcFA,OAdE,CAcM,QAdN,EAcgB,QAdhB,CAAP;AAeH,CAjBD;AAmBA;;;;;AAIAoG,WAAW,CAAC5E,SAAZ,CAAsB0F,MAAtB,GAA+B,UAAUtH,IAAV,EAAgB;AAC3C,MAAI,CAAC,KAAKiB,OAAL,CAAaqG,MAAlB,EAA0B,OAAOtH,IAAP;AAC1B,MAAI4G,GAAG,GAAG,EAAV;AAAA,MACIlE,CAAC,GAAG1C,IAAI,CAACgD,MADb;AAAA,MAEIR,CAAC,GAAG,CAFR;AAAA,MAGIiF,EAHJ;;AAKA,SAAOjF,CAAC,GAAGE,CAAX,EAAcF,CAAC,EAAf,EAAmB;AACfiF,IAAAA,EAAE,GAAGzH,IAAI,CAACoF,UAAL,CAAgB5C,CAAhB,CAAL;;AACA,QAAIkF,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrBF,MAAAA,EAAE,GAAG,MAAMA,EAAE,CAACG,QAAH,CAAY,EAAZ,CAAX;AACH;;AACDhB,IAAAA,GAAG,IAAI,OAAOa,EAAP,GAAY,GAAnB;AACH;;AAED,SAAOb,GAAP;AACH,CAhBD;AAkBA;;;;;AAIA,SAASF,QAAT,CAAkBzF,OAAlB,EAA2B;AACvB,OAAKA,OAAL,GAAeA,OAAO,IAAIK,KAAK,CAACC,QAAhC;AACH;;AAEDmF,QAAQ,CAAC9E,SAAT,CAAmBzC,IAAnB,GAA0B,UAAUA,IAAV,EAAgB0I,UAAhB,EAA4BC,OAA5B,EAAqC;AAC3D,MAAIvE,IAAI,GAAG,CAACsE,UAAU,IAAI,EAAf,EAAmB3D,KAAnB,CAAyB,KAAzB,EAAgC,CAAhC,CAAX;;AACA,MAAI,KAAKjD,OAAL,CAAa8G,SAAjB,EAA4B;AACxB,QAAInB,GAAG,GAAG,KAAK3F,OAAL,CAAa8G,SAAb,CAAuB5I,IAAvB,EAA6BoE,IAA7B,CAAV;;AACA,QAAIqD,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAKzH,IAA3B,EAAiC;AAC7B2I,MAAAA,OAAO,GAAG,IAAV;AACA3I,MAAAA,IAAI,GAAGyH,GAAP;AACH;AACJ;;AAED,MAAI,CAACrD,IAAL,EAAW;AACP,WAAO,iBACAuE,OAAO,GAAG3I,IAAH,GAAU4F,MAAM,CAAC5F,IAAD,EAAO,IAAP,CADvB,IAED,eAFN;AAGH;;AAED,SAAO,uBACD,KAAK8B,OAAL,CAAa+G,UADZ,GAEDjD,MAAM,CAACxB,IAAD,EAAO,IAAP,CAFL,GAGD,IAHC,IAIAuE,OAAO,GAAG3I,IAAH,GAAU4F,MAAM,CAAC5F,IAAD,EAAO,IAAP,CAJvB,IAKD,iBALN;AAMH,CAtBD;;AAwBAuH,QAAQ,CAAC9E,SAAT,CAAmBrC,UAAnB,GAAgC,UAAU0I,KAAV,EAAiB;AAC7C,SAAO,mBAAmBA,KAAnB,GAA2B,iBAAlC;AACH,CAFD;;AAIAvB,QAAQ,CAAC9E,SAAT,CAAmBnC,IAAnB,GAA0B,UAAUA,IAAV,EAAgB;AACtC,SAAOA,IAAP;AACH,CAFD;;AAIAiH,QAAQ,CAAC9E,SAAT,CAAmBtC,OAAnB,GAA6B,UAAUU,IAAV,EAAgBkI,KAAhB,EAAuBC,GAAvB,EAA4BC,OAA5B,EAAqC;AAC9D,MAAI,KAAKnH,OAAL,CAAaoH,SAAjB,EAA4B;AACxB,WAAO,OACDH,KADC,GAED,OAFC,GAGD,KAAKjH,OAAL,CAAaqH,YAHZ,GAIDF,OAAO,CAACG,IAAR,CAAaJ,GAAb,CAJC,GAKD,IALC,GAMDnI,IANC,GAOD,KAPC,GAQDkI,KARC,GASD,KATN;AAUH,GAZ6D,CAa9D;;;AACA,SAAO,OAAOA,KAAP,GAAe,GAAf,GAAqBlI,IAArB,GAA4B,KAA5B,GAAoCkI,KAApC,GAA4C,KAAnD;AACH,CAfD;;AAiBAxB,QAAQ,CAAC9E,SAAT,CAAmBvC,EAAnB,GAAwB,YAAY;AAChC,SAAO,KAAK4B,OAAL,CAAauH,KAAb,GAAqB,SAArB,GAAiC,QAAxC;AACH,CAFD;;AAIA9B,QAAQ,CAAC9E,SAAT,CAAmBpC,IAAnB,GAA0B,UAAUiJ,IAAV,EAAgBzE,OAAhB,EAAyBC,KAAzB,EAAgC;AACtD,MAAIf,IAAI,GAAGc,OAAO,GAAG,IAAH,GAAU,IAA5B;AAAA,MACI0E,QAAQ,GAAI1E,OAAO,IAAIC,KAAK,KAAK,CAAtB,GAA4B,aAAaA,KAAb,GAAqB,GAAjD,GAAwD,EADvE;AAEA,SAAO,MAAMf,IAAN,GAAawF,QAAb,GAAwB,KAAxB,GAAgCD,IAAhC,GAAuC,IAAvC,GAA8CvF,IAA9C,GAAqD,KAA5D;AACH,CAJD;;AAMAwD,QAAQ,CAAC9E,SAAT,CAAmB+G,QAAnB,GAA8B,UAAU3I,IAAV,EAAgB;AAC1C,MAAM4I,GAAG,GAAG,aAAZ;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAGD,GAAG,CAAC7E,IAAJ,CAAS/D,IAAT,CAAH,EAAkB;AACd6I,IAAAA,SAAS,GAAG,oBAAZ;;AACA,QAAG,UAAU9E,IAAV,CAAe/D,IAAf,CAAH,EAAwB;AACpB6I,MAAAA,SAAS,IAAI,6BAAb;AACH;AACJ;;AACD,+BAAqBA,SAArB,iBAAoC7I,IAApC;AACH,CAVD;;AAYA0G,QAAQ,CAAC9E,SAAT,CAAmBkH,QAAnB,GAA8B,UAAUnE,OAAV,EAAmB;AAC7C,SAAO,aACAA,OAAO,GAAG,UAAH,GAAgB,EADvB,IAED,0BAFC,IAGA,KAAK1D,OAAL,CAAauH,KAAb,GAAqB,IAArB,GAA4B,EAH5B,IAID,IAJN;AAKH,CAND;;AAQA9B,QAAQ,CAAC9E,SAAT,CAAmBjB,SAAnB,GAA+B,UAAUX,IAAV,EAAgB;AAC3C,SAAO,QAAQA,IAAR,GAAe,QAAtB;AACH,CAFD;;AAIA0G,QAAQ,CAAC9E,SAAT,CAAmB/B,KAAnB,GAA2B,UAAU6D,MAAV,EAAkB+E,IAAlB,EAAwB;AAC/C,MAAIA,IAAJ,EAAUA,IAAI,GAAG,YAAYA,IAAZ,GAAmB,UAA1B;AAEV,SAAO,cACD,WADC,GAED/E,MAFC,GAGD,YAHC,GAID+E,IAJC,GAKD,YALN;AAMH,CATD;;AAWA/B,QAAQ,CAAC9E,SAAT,CAAmBmH,QAAnB,GAA8B,UAAUC,OAAV,EAAmB;AAC7C,SAAO,WAAWA,OAAX,GAAqB,SAA5B;AACH,CAFD;;AAIAtC,QAAQ,CAAC9E,SAAT,CAAmBqH,SAAnB,GAA+B,UAAUD,OAAV,EAAmBE,KAAnB,EAA0B;AACrD,MAAIhG,IAAI,GAAGgG,KAAK,CAACxF,MAAN,GAAe,IAAf,GAAsB,IAAjC;AACA,MAAIjB,GAAG,GAAGyG,KAAK,CAACtF,KAAN,GACJ,MAAMV,IAAN,GAAa,UAAb,GAA0BgG,KAAK,CAACtF,KAAhC,GAAwC,IADpC,GAEJ,MAAMV,IAAN,GAAa,GAFnB;AAGA,SAAOT,GAAG,GAAGuG,OAAN,GAAgB,IAAhB,GAAuB9F,IAAvB,GAA8B,KAArC;AACH,CAND,C,CAQA;;;AACAwD,QAAQ,CAAC9E,SAAT,CAAmB+D,MAAnB,GAA4B,UAAU3F,IAAV,EAAgB;AACxC,SAAO,aAAaA,IAAb,GAAoB,WAA3B;AACH,CAFD;;AAIA0G,QAAQ,CAAC9E,SAAT,CAAmBgE,EAAnB,GAAwB,UAAU5F,IAAV,EAAgB;AACpC,SAAO,SAASA,IAAT,GAAgB,OAAvB;AACH,CAFD;;AAIA0G,QAAQ,CAAC9E,SAAT,CAAmByF,QAAnB,GAA8B,UAAUrH,IAAV,EAAgB;AAC1C,SAAO,WAAWA,IAAX,GAAkB,SAAzB;AACH,CAFD;;AAIA0G,QAAQ,CAAC9E,SAAT,CAAmBiE,EAAnB,GAAwB,YAAY;AAChC,SAAO,KAAK5E,OAAL,CAAauH,KAAb,GAAqB,OAArB,GAA+B,MAAtC;AACH,CAFD;;AAIA9B,QAAQ,CAAC9E,SAAT,CAAmBkE,GAAnB,GAAyB,UAAU9F,IAAV,EAAgB;AACrC,SAAO,UAAUA,IAAV,GAAiB,QAAxB;AACH,CAFD;;AAIA0G,QAAQ,CAAC9E,SAAT,CAAmB4D,IAAnB,GAA0B,UAAUP,IAAV,EAAgBC,KAAhB,EAAuBlF,IAAvB,EAA6B;AACnDiF,EAAAA,IAAI,GAAGkE,QAAQ,CAAC,KAAKlI,OAAL,CAAa2D,QAAd,EAAwB,KAAK3D,OAAL,CAAamI,OAArC,EAA8CnE,IAA9C,CAAf;;AACA,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,WAAOjF,IAAP;AACH;;AACD,MAAI4G,GAAG,GAAG,cAAc7B,MAAM,CAACE,IAAD,CAApB,GAA6B,GAAvC;;AACA,MAAIC,KAAJ,EAAW;AACP0B,IAAAA,GAAG,IAAI,aAAa1B,KAAb,GAAqB,GAA5B;AACH;;AACD0B,EAAAA,GAAG,IAAI,MAAM5G,IAAN,GAAa,MAApB;AACA,SAAO4G,GAAP;AACH,CAXD;;AAaAF,QAAQ,CAAC9E,SAAT,CAAmB4F,KAAnB,GAA2B,UAAUvC,IAAV,EAAgBC,KAAhB,EAAuBlF,IAAvB,EAA6B;AACpDiF,EAAAA,IAAI,GAAGkE,QAAQ,CAAC,KAAKlI,OAAL,CAAa2D,QAAd,EAAwB,KAAK3D,OAAL,CAAamI,OAArC,EAA8CnE,IAA9C,CAAf;;AACA,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,WAAOjF,IAAP;AACH;;AAED,MAAI4G,GAAG,GAAG,eAAe3B,IAAf,GAAsB,SAAtB,GAAkCjF,IAAlC,GAAyC,GAAnD;;AACA,MAAIkF,KAAJ,EAAW;AACP0B,IAAAA,GAAG,IAAI,aAAa1B,KAAb,GAAqB,GAA5B;AACH;;AACD0B,EAAAA,GAAG,IAAI,KAAK3F,OAAL,CAAauH,KAAb,GAAqB,IAArB,GAA4B,GAAnC;AACA,SAAO5B,GAAP;AACH,CAZD;;AAcAF,QAAQ,CAAC9E,SAAT,CAAmB5B,IAAnB,GAA0B,UAAUA,IAAV,EAAgB;AACtC,SAAOA,IAAP;AACH,CAFD;AAIA;;;;;;AAKA,SAASqJ,YAAT,GAAwB,CACvB,C,CAED;;;AAEAA,YAAY,CAACzH,SAAb,CAAuB+D,MAAvB,GACI0D,YAAY,CAACzH,SAAb,CAAuBgE,EAAvB,GACIyD,YAAY,CAACzH,SAAb,CAAuByF,QAAvB,GACIgC,YAAY,CAACzH,SAAb,CAAuBkE,GAAvB,GACIuD,YAAY,CAACzH,SAAb,CAAuB5B,IAAvB,GAA8B,UAAUA,IAAV,EAAgB;AAC1C,SAAOA,IAAP;AACH,CANjB;;AAQAqJ,YAAY,CAACzH,SAAb,CAAuB4D,IAAvB,GACI6D,YAAY,CAACzH,SAAb,CAAuB4F,KAAvB,GAA+B,UAAUvC,IAAV,EAAgBC,KAAhB,EAAuBlF,IAAvB,EAA6B;AACxD,SAAO,KAAKA,IAAZ;AACH,CAHL;;AAKAqJ,YAAY,CAACzH,SAAb,CAAuBiE,EAAvB,GAA4B,YAAY;AACpC,SAAO,EAAP;AACH,CAFD;AAIA;;;;;AAIA,SAASyD,MAAT,CAAgBrI,OAAhB,EAAyB;AACrB,OAAKC,MAAL,GAAc,EAAd;AACA,OAAKW,KAAL,GAAa,IAAb;AACA,OAAKZ,OAAL,GAAeA,OAAO,IAAIK,KAAK,CAACC,QAAhC;AACA,OAAKN,OAAL,CAAawF,QAAb,GAAwB,KAAKxF,OAAL,CAAawF,QAAb,IAAyB,IAAIC,QAAJ,EAAjD;AACA,OAAKD,QAAL,GAAgB,KAAKxF,OAAL,CAAawF,QAA7B;AACA,OAAKA,QAAL,CAAcxF,OAAd,GAAwB,KAAKA,OAA7B;AACA,OAAKmH,OAAL,GAAe,IAAImB,OAAJ,EAAf;AACH;AAED;;;;;AAIAD,MAAM,CAACE,KAAP,GAAe,UAAU9H,GAAV,EAAeT,OAAf,EAAwB;AACnC,MAAIwI,MAAM,GAAG,IAAIH,MAAJ,CAAWrI,OAAX,CAAb;AACA,SAAOwI,MAAM,CAACD,KAAP,CAAa9H,GAAb,CAAP;AACH,CAHD;AAKA;;;;;AAIA4H,MAAM,CAAC1H,SAAP,CAAiB4H,KAAjB,GAAyB,UAAU9H,GAAV,EAAe;AACpC,OAAK2D,MAAL,GAAc,IAAImB,WAAJ,CAAgB9E,GAAG,CAACP,KAApB,EAA2B,KAAKF,OAAhC,CAAd,CADoC,CAEpC;;AACA,OAAKyI,UAAL,GAAkB,IAAIlD,WAAJ,CACd9E,GAAG,CAACP,KADU,EAEdN,KAAK,CAAC,EAAD,EAAK,KAAKI,OAAV,EAAmB;AAACwF,IAAAA,QAAQ,EAAE,IAAI4C,YAAJ;AAAX,GAAnB,CAFS,CAAlB;AAIA,OAAKnI,MAAL,GAAcQ,GAAG,CAACiI,OAAJ,EAAd;AAEA,MAAI/C,GAAG,GAAG,EAAV;;AACA,SAAO,KAAK7E,IAAL,EAAP,EAAoB;AAChB6E,IAAAA,GAAG,IAAI,KAAKgD,GAAL,EAAP;AACH;;AAED,SAAOhD,GAAP;AACH,CAfD;AAiBA;;;;;AAIA0C,MAAM,CAAC1H,SAAP,CAAiBG,IAAjB,GAAwB,YAAY;AAChC,OAAKF,KAAL,GAAa,KAAKX,MAAL,CAAY2I,GAAZ,EAAb;AACA,SAAO,KAAKhI,KAAZ;AACH,CAHD;AAKA;;;;;AAIAyH,MAAM,CAAC1H,SAAP,CAAiBkI,IAAjB,GAAwB,YAAY;AAChC,SAAO,KAAK5I,MAAL,CAAY,KAAKA,MAAL,CAAY8B,MAAZ,GAAqB,CAAjC,KAAuC,CAA9C;AACH,CAFD;AAIA;;;;;AAIAsG,MAAM,CAAC1H,SAAP,CAAiBmI,SAAjB,GAA6B,YAAY;AACrC,MAAItB,IAAI,GAAG,KAAK5G,KAAL,CAAW7B,IAAtB;;AAEA,SAAO,KAAK8J,IAAL,GAAY5G,IAAZ,KAAqB,MAA5B,EAAoC;AAChCuF,IAAAA,IAAI,IAAI,OAAO,KAAK1G,IAAL,GAAY/B,IAA3B;AACH;;AAED,SAAO,KAAKqF,MAAL,CAAYsB,MAAZ,CAAmB8B,IAAnB,CAAP;AACH,CARD;AAUA;;;;;AAIAa,MAAM,CAAC1H,SAAP,CAAiBgI,GAAjB,GAAuB,YAAY;AAC/B,UAAQ,KAAK/H,KAAL,CAAWqB,IAAnB;AACI,SAAK,OAAL;AAAc;AACV,eAAO,EAAP;AACH;;AACD,SAAK,IAAL;AAAW;AACP,eAAO,KAAKuD,QAAL,CAAcpH,EAAd,EAAP;AACH;;AACD,SAAK,SAAL;AAAgB;AACZ,eAAO,KAAKoH,QAAL,CAAcnH,OAAd,CACH,KAAK+F,MAAL,CAAYsB,MAAZ,CAAmB,KAAK9E,KAAL,CAAW7B,IAA9B,CADG,EAEH,KAAK6B,KAAL,CAAW4B,KAFR,EAGHuG,QAAQ,CAAC,KAAKN,UAAL,CAAgB/C,MAAhB,CAAuB,KAAK9E,KAAL,CAAW7B,IAAlC,CAAD,CAHL,EAIH,KAAKoI,OAJF,CAAP;AAKH;;AACD,SAAK,MAAL;AAAa;AACT,eAAO,KAAK3B,QAAL,CAActH,IAAd,CAAmB,KAAK0C,KAAL,CAAW7B,IAA9B,EACH,KAAK6B,KAAL,CAAW0B,IADR,EAEH,KAAK1B,KAAL,CAAWiG,OAFR,CAAP;AAGH;;AACD,SAAK,OAAL;AAAc;AACV,YAAIpE,MAAM,GAAG,EAAb;AAAA,YACI+E,IAAI,GAAG,EADX;AAAA,YAEIjG,CAFJ;AAAA,YAGIyH,GAHJ;AAAA,YAIIC,IAJJ;AAAA,YAKIC,CALJ,CADU,CAQV;;AACAD,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK1H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKX,KAAL,CAAW6B,MAAX,CAAkBV,MAAlC,EAA0CR,CAAC,EAA3C,EAA+C;AAC3C0H,UAAAA,IAAI,IAAI,KAAKzD,QAAL,CAAcwC,SAAd,CACJ,KAAK5D,MAAL,CAAYsB,MAAZ,CAAmB,KAAK9E,KAAL,CAAW6B,MAAX,CAAkBlB,CAAlB,CAAnB,CADI,EAEJ;AAACkB,YAAAA,MAAM,EAAE,IAAT;AAAeE,YAAAA,KAAK,EAAE,KAAK/B,KAAL,CAAW+B,KAAX,CAAiBpB,CAAjB;AAAtB,WAFI,CAAR;AAIH;;AACDkB,QAAAA,MAAM,IAAI,KAAK+C,QAAL,CAAcsC,QAAd,CAAuBmB,IAAvB,CAAV;;AAEA,aAAK1H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKX,KAAL,CAAWiC,KAAX,CAAiBd,MAAjC,EAAyCR,CAAC,EAA1C,EAA8C;AAC1CyH,UAAAA,GAAG,GAAG,KAAKpI,KAAL,CAAWiC,KAAX,CAAiBtB,CAAjB,CAAN;AAEA0H,UAAAA,IAAI,GAAG,EAAP;;AACA,eAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,GAAG,CAACjH,MAApB,EAA4BmH,CAAC,EAA7B,EAAiC;AAC7BD,YAAAA,IAAI,IAAI,KAAKzD,QAAL,CAAcwC,SAAd,CACJ,KAAK5D,MAAL,CAAYsB,MAAZ,CAAmBsD,GAAG,CAACE,CAAD,CAAtB,CADI,EAEJ;AAACzG,cAAAA,MAAM,EAAE,KAAT;AAAgBE,cAAAA,KAAK,EAAE,KAAK/B,KAAL,CAAW+B,KAAX,CAAiBuG,CAAjB;AAAvB,aAFI,CAAR;AAIH;;AAED1B,UAAAA,IAAI,IAAI,KAAKhC,QAAL,CAAcsC,QAAd,CAAuBmB,IAAvB,CAAR;AACH;;AACD,eAAO,KAAKzD,QAAL,CAAc5G,KAAd,CAAoB6D,MAApB,EAA4B+E,IAA5B,CAAP;AACH;;AACD,SAAK,kBAAL;AAAyB;AACrBA,QAAAA,IAAI,GAAG,EAAP;;AAEA,eAAO,KAAK1G,IAAL,GAAYmB,IAAZ,KAAqB,gBAA5B,EAA8C;AAC1CuF,UAAAA,IAAI,IAAI,KAAKmB,GAAL,EAAR;AACH;;AAED,eAAO,KAAKnD,QAAL,CAAclH,UAAd,CAAyBkJ,IAAzB,CAAP;AACH;;AACD,SAAK,YAAL;AAAmB;AACfA,QAAAA,IAAI,GAAG,EAAP;AACA,YAAIzE,OAAO,GAAG,KAAKnC,KAAL,CAAWmC,OAAzB;AAAA,YACIC,KAAK,GAAG,KAAKpC,KAAL,CAAWoC,KADvB;;AAGA,eAAO,KAAKlC,IAAL,GAAYmB,IAAZ,KAAqB,UAA5B,EAAwC;AACpCuF,UAAAA,IAAI,IAAI,KAAKmB,GAAL,EAAR;AACH;;AACD,eAAO,KAAKnD,QAAL,CAAcjH,IAAd,CAAmBiJ,IAAnB,EAAyBzE,OAAzB,EAAkCC,KAAlC,CAAP;AACH;;AACD,SAAK,iBAAL;AAAwB;AACpBwE,QAAAA,IAAI,GAAG,EAAP;AACA,YAAIzG,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAvB;AACA,YAAI2C,OAAO,GAAG,KAAK9C,KAAL,CAAW8C,OAAzB;AACA,YAAID,IAAI,GAAG,KAAK7C,KAAL,CAAW6C,IAAtB;;AAEA,YAAI,KAAK7C,KAAL,CAAW6C,IAAf,EAAqB;AACjB+D,UAAAA,IAAI,IAAI,KAAKhC,QAAL,CAAcqC,QAAd,CAAuBnE,OAAvB,CAAR;AACH;;AAED,eAAO,KAAK5C,IAAL,GAAYmB,IAAZ,KAAqB,eAA5B,EAA6C;AACzCuF,UAAAA,IAAI,IAAI,CAACzG,KAAD,IAAU,KAAKH,KAAL,CAAWqB,IAAX,KAAoB,MAA9B,GACF,KAAK6G,SAAL,EADE,GAEF,KAAKH,GAAL,EAFN;AAGH;;AACD,eAAO,KAAKnD,QAAL,CAAckC,QAAd,CAAuBF,IAAvB,EAA6B/D,IAA7B,EAAmCC,OAAnC,CAAP;AACH;;AACD,SAAK,MAAL;AAAa;AACT;AACA,eAAO,KAAK8B,QAAL,CAAchH,IAAd,CAAmB,KAAKoC,KAAL,CAAW7B,IAA9B,CAAP;AACH;;AACD,SAAK,WAAL;AAAkB;AACd,eAAO,KAAKyG,QAAL,CAAc9F,SAAd,CAAwB,KAAK0E,MAAL,CAAYsB,MAAZ,CAAmB,KAAK9E,KAAL,CAAW7B,IAA9B,CAAxB,CAAP;AACH;;AACD,SAAK,MAAL;AAAa;AACT,eAAO,KAAKyG,QAAL,CAAc9F,SAAd,CAAwB,KAAKoJ,SAAL,EAAxB,CAAP;AACH;;AACD;AAAS;AACL,YAAIK,MAAM,GAAG,iBAAiB,KAAKvI,KAAL,CAAWqB,IAA5B,GAAmC,uBAAhD;;AACA,YAAI,KAAKjC,OAAL,CAAaoJ,MAAjB,EAAyB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,SAFD,MAEO;AACH,gBAAM,IAAIjF,KAAJ,CAAUiF,MAAV,CAAN;AACH;AACJ;AAzGL;AA2GH,CA5GD;AA8GA;;;;;AAIA,SAASb,OAAT,GAAmB;AACf,OAAKiB,IAAL,GAAY,EAAZ;AACH;AAED;;;;;AAIAjB,OAAO,CAAC3H,SAAR,CAAkB2G,IAAlB,GAAyB,UAAUkC,KAAV,EAAiB;AACtC,MAAIlC,IAAI,GAAGkC,KAAK,CACXzF,WADM,GAENxB,IAFM,GAGNpD,OAHM,CAGE,+DAHF,EAGmE,EAHnE,EAINA,OAJM,CAIE,KAJF,EAIS,GAJT,CAAX;;AAMA,MAAI,KAAKoK,IAAL,CAAUE,cAAV,CAAyBnC,IAAzB,CAAJ,EAAoC;AAChC,QAAIoC,YAAY,GAAGpC,IAAnB;;AACA,OAAG;AACC,WAAKiC,IAAL,CAAUG,YAAV;AACApC,MAAAA,IAAI,GAAGoC,YAAY,GAAG,GAAf,GAAqB,KAAKH,IAAL,CAAUG,YAAV,CAA5B;AACH,KAHD,QAGS,KAAKH,IAAL,CAAUE,cAAV,CAAyBnC,IAAzB,CAHT;AAIH;;AACD,OAAKiC,IAAL,CAAUjC,IAAV,IAAkB,CAAlB;AAEA,SAAOA,IAAP;AACH,CAjBD;AAmBA;;;;;AAIA,SAASxD,MAAT,CAAgBtF,IAAhB,EAAsBmL,MAAtB,EAA8B;AAC1B,MAAIA,MAAJ,EAAY;AACR,QAAI7F,MAAM,CAAC8F,UAAP,CAAkB9G,IAAlB,CAAuBtE,IAAvB,CAAJ,EAAkC;AAC9B,aAAOA,IAAI,CAACW,OAAL,CAAa2E,MAAM,CAAC+F,aAApB,EAAmC,UAAUrD,EAAV,EAAc;AACpD,eAAO1C,MAAM,CAACgG,YAAP,CAAoBtD,EAApB,CAAP;AACH,OAFM,CAAP;AAGH;AACJ,GAND,MAMO;AACH,QAAI1C,MAAM,CAACiG,kBAAP,CAA0BjH,IAA1B,CAA+BtE,IAA/B,CAAJ,EAA0C;AACtC,aAAOA,IAAI,CAACW,OAAL,CAAa2E,MAAM,CAACkG,qBAApB,EAA2C,UAAUxD,EAAV,EAAc;AAC5D,eAAO1C,MAAM,CAACgG,YAAP,CAAoBtD,EAApB,CAAP;AACH,OAFM,CAAP;AAGH;AACJ;;AAED,SAAOhI,IAAP;AACH;;AAEDsF,MAAM,CAAC8F,UAAP,GAAoB,SAApB;AACA9F,MAAM,CAAC+F,aAAP,GAAuB,UAAvB;AACA/F,MAAM,CAACgG,YAAP,GAAsB;AAClB,OAAK,OADa;AAElB,OAAK,MAFa;AAGlB,OAAK,MAHa;AAIlB,OAAK,QAJa;AAKlB,OAAK;AALa,CAAtB;AAQAhG,MAAM,CAACiG,kBAAP,GAA4B,oBAA5B;AACAjG,MAAM,CAACkG,qBAAP,GAA+B,qBAA/B;;AAEA,SAASjB,QAAT,CAAkBvK,IAAlB,EAAwB;AACpB;AACA,SAAOA,IAAI,CAACW,OAAL,CAAa,4CAAb,EAA2D,UAAU8K,CAAV,EAAaC,CAAb,EAAgB;AAC9EA,IAAAA,CAAC,GAAGA,CAAC,CAACnG,WAAF,EAAJ;AACA,QAAImG,CAAC,KAAK,OAAV,EAAmB,OAAO,GAAP;;AACnB,QAAIA,CAAC,CAAC3G,MAAF,CAAS,CAAT,MAAgB,GAApB,EAAyB;AACrB,aAAO2G,CAAC,CAAC3G,MAAF,CAAS,CAAT,MAAgB,GAAhB,GACD4G,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,CAAC,CAACpI,SAAF,CAAY,CAAZ,CAAD,EAAiB,EAAjB,CAA5B,CADC,GAEDqI,MAAM,CAACC,YAAP,CAAoB,CAACF,CAAC,CAACpI,SAAF,CAAY,CAAZ,CAArB,CAFN;AAGH;;AACD,WAAO,EAAP;AACH,GATM,CAAP;AAUH;;AAED,SAAS5C,IAAT,CAAcoL,KAAd,EAAqBC,GAArB,EAA0B;AACtBD,EAAAA,KAAK,GAAGA,KAAK,CAAC/K,MAAN,IAAgB+K,KAAxB;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,SAAO;AACHpL,IAAAA,OAAO,EAAE,iBAAUqL,IAAV,EAAgBC,GAAhB,EAAqB;AAC1BA,MAAAA,GAAG,GAAGA,GAAG,CAAClL,MAAJ,IAAckL,GAApB;AACAA,MAAAA,GAAG,GAAGA,GAAG,CAACtL,OAAJ,CAAY,cAAZ,EAA4B,IAA5B,CAAN;AACAmL,MAAAA,KAAK,GAAGA,KAAK,CAACnL,OAAN,CAAcqL,IAAd,EAAoBC,GAApB,CAAR;AACA,aAAO,IAAP;AACH,KANE;AAOHrL,IAAAA,QAAQ,EAAE,oBAAY;AAClB,aAAO,IAAI+D,MAAJ,CAAWmH,KAAX,EAAkBC,GAAlB,CAAP;AACH;AATE,GAAP;AAWH;;AAED,SAASrC,QAAT,CAAkBvE,QAAlB,EAA4B+G,IAA5B,EAAkC1G,IAAlC,EAAwC;AACpC,MAAIL,QAAJ,EAAc;AACV,QAAI;AACA,UAAIgH,IAAI,GAAGC,kBAAkB,CAAC7B,QAAQ,CAAC/E,IAAD,CAAT,CAAlB,CACN7E,OADM,CACE,SADF,EACa,EADb,EAEN4E,WAFM,EAAX;AAGH,KAJD,CAIE,OAAO8G,CAAP,EAAU;AACR,aAAO,IAAP;AACH;;AACD,QAAIF,IAAI,CAACzH,OAAL,CAAa,aAAb,MAAgC,CAAhC,IAAqCyH,IAAI,CAACzH,OAAL,CAAa,WAAb,MAA8B,CAAnE,IAAwEyH,IAAI,CAACzH,OAAL,CAAa,OAAb,MAA0B,CAAtG,EAAyG;AACrG,aAAO,IAAP;AACH;AACJ;;AACD,MAAIwH,IAAI,IAAI,CAACI,oBAAoB,CAAChI,IAArB,CAA0BkB,IAA1B,CAAb,EAA8C;AAC1CA,IAAAA,IAAI,GAAG+G,UAAU,CAACL,IAAD,EAAO1G,IAAP,CAAjB;AACH;;AACD,MAAI;AACAA,IAAAA,IAAI,GAAGgH,SAAS,CAAChH,IAAD,CAAT,CAAgB7E,OAAhB,CAAwB,MAAxB,EAAgC,GAAhC,CAAP;AACH,GAFD,CAEE,OAAO0L,CAAP,EAAU;AACR,WAAO,IAAP;AACH;;AACD,SAAO7G,IAAP;AACH;;AAED,SAAS+G,UAAT,CAAoBL,IAApB,EAA0B1G,IAA1B,EAAgC;AAC5B,MAAI,CAACiH,QAAQ,CAAC,MAAMP,IAAP,CAAb,EAA2B;AACvB;AACA;AACA;AACA,QAAI,mBAAmB5H,IAAnB,CAAwB4H,IAAxB,CAAJ,EAAmC;AAC/BO,MAAAA,QAAQ,CAAC,MAAMP,IAAP,CAAR,GAAuBA,IAAI,GAAG,GAA9B;AACH,KAFD,MAEO;AACHO,MAAAA,QAAQ,CAAC,MAAMP,IAAP,CAAR,GAAuBrI,KAAK,CAACqI,IAAD,EAAO,GAAP,EAAY,IAAZ,CAA5B;AACH;AACJ;;AACDA,EAAAA,IAAI,GAAGO,QAAQ,CAAC,MAAMP,IAAP,CAAf;;AAEA,MAAI1G,IAAI,CAACX,KAAL,CAAW,CAAX,EAAc,CAAd,MAAqB,IAAzB,EAA+B;AAC3B,WAAOqH,IAAI,CAACvL,OAAL,CAAa,UAAb,EAAyB,GAAzB,IAAgC6E,IAAvC;AACH,GAFD,MAEO,IAAIA,IAAI,CAACT,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC/B,WAAOmH,IAAI,CAACvL,OAAL,CAAa,oBAAb,EAAmC,IAAnC,IAA2C6E,IAAlD;AACH,GAFM,MAEA;AACH,WAAO0G,IAAI,GAAG1G,IAAd;AACH;AACJ;;AAED,IAAIiH,QAAQ,GAAG,EAAf;AACA,IAAIH,oBAAoB,GAAG,+BAA3B;;AAEA,SAASnM,IAAT,GAAgB,CACf;;AAEDA,IAAI,CAACkD,IAAL,GAAYlD,IAAZ;;AAEA,SAASiB,KAAT,CAAesL,GAAf,EAAoB;AAChB,MAAI3J,CAAC,GAAG,CAAR;AAAA,MACI4J,MADJ;AAAA,MAEIC,GAFJ;;AAIA,SAAO7J,CAAC,GAAG8J,SAAS,CAACtJ,MAArB,EAA6BR,CAAC,EAA9B,EAAkC;AAC9B4J,IAAAA,MAAM,GAAGE,SAAS,CAAC9J,CAAD,CAAlB;;AACA,SAAK6J,GAAL,IAAYD,MAAZ,EAAoB;AAChB,UAAIhL,MAAM,CAACQ,SAAP,CAAiB8I,cAAjB,CAAgC6B,IAAhC,CAAqCH,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AACnDF,QAAAA,GAAG,CAACE,GAAD,CAAH,GAAWD,MAAM,CAACC,GAAD,CAAjB;AACH;AACJ;AACJ;;AAED,SAAOF,GAAP;AACH;;AAED,SAASxI,UAAT,CAAoB6I,QAApB,EAA8BC,KAA9B,EAAqC;AACjC;AACA;AACA,MAAIxC,GAAG,GAAGuC,QAAQ,CAACpM,OAAT,CAAiB,KAAjB,EAAwB,UAAU8D,KAAV,EAAiBwI,MAAjB,EAAyBC,GAAzB,EAA8B;AACxD,QAAI7E,OAAO,GAAG,KAAd;AAAA,QACI8E,IAAI,GAAGF,MADX;;AAEA,WAAO,EAAEE,IAAF,IAAU,CAAV,IAAeD,GAAG,CAACC,IAAD,CAAH,KAAc,IAApC;AAA0C9E,MAAAA,OAAO,GAAG,CAACA,OAAX;AAA1C;;AACA,QAAIA,OAAJ,EAAa;AACT;AACA;AACA,aAAO,GAAP;AACH,KAJD,MAIO;AACH;AACA,aAAO,IAAP;AACH;AACJ,GAZK,CAAV;AAAA,MAaIhE,KAAK,GAAGmG,GAAG,CAACpG,KAAJ,CAAU,KAAV,CAbZ;AAAA,MAcIrB,CAAC,GAAG,CAdR;;AAgBA,MAAIsB,KAAK,CAACd,MAAN,GAAeyJ,KAAnB,EAA0B;AACtB3I,IAAAA,KAAK,CAAC+I,MAAN,CAAaJ,KAAb;AACH,GAFD,MAEO;AACH,WAAO3I,KAAK,CAACd,MAAN,GAAeyJ,KAAtB;AAA6B3I,MAAAA,KAAK,CAACb,IAAN,CAAW,EAAX;AAA7B;AACH;;AAED,SAAOT,CAAC,GAAGsB,KAAK,CAACd,MAAjB,EAAyBR,CAAC,EAA1B,EAA8B;AAC1B;AACAsB,IAAAA,KAAK,CAACtB,CAAD,CAAL,GAAWsB,KAAK,CAACtB,CAAD,CAAL,CAASgB,IAAT,GAAgBpD,OAAhB,CAAwB,OAAxB,EAAiC,GAAjC,CAAX;AACH;;AACD,SAAO0D,KAAP;AACH,C,CAED;AACA;AACA;;;AACA,SAASR,KAAT,CAAeqJ,GAAf,EAAoBG,CAApB,EAAuBC,MAAvB,EAA+B;AAC3B,MAAIJ,GAAG,CAAC3J,MAAJ,KAAe,CAAnB,EAAsB;AAClB,WAAO,EAAP;AACH,GAH0B,CAK3B;;;AACA,MAAIgK,OAAO,GAAG,CAAd,CAN2B,CAQ3B;;AACA,SAAOA,OAAO,GAAGL,GAAG,CAAC3J,MAArB,EAA6B;AACzB,QAAIiK,QAAQ,GAAGN,GAAG,CAACnI,MAAJ,CAAWmI,GAAG,CAAC3J,MAAJ,GAAagK,OAAb,GAAuB,CAAlC,CAAf;;AACA,QAAIC,QAAQ,KAAKH,CAAb,IAAkB,CAACC,MAAvB,EAA+B;AAC3BC,MAAAA,OAAO;AACV,KAFD,MAEO,IAAIC,QAAQ,KAAKH,CAAb,IAAkBC,MAAtB,EAA8B;AACjCC,MAAAA,OAAO;AACV,KAFM,MAEA;AACH;AACH;AACJ;;AAED,SAAOL,GAAG,CAACO,MAAJ,CAAW,CAAX,EAAcP,GAAG,CAAC3J,MAAJ,GAAagK,OAA3B,CAAP;AACH;;AAED,SAAS/F,kBAAT,CAA4B0F,GAA5B,EAAiCxK,CAAjC,EAAoC;AAChC,MAAIwK,GAAG,CAACxI,OAAJ,CAAYhC,CAAC,CAAC,CAAD,CAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC1B,WAAO,CAAC,CAAR;AACH;;AACD,MAAI+F,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAI1F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAAG,CAAC3J,MAAxB,EAAgCR,CAAC,EAAjC,EAAqC;AACjC,QAAImK,GAAG,CAACnK,CAAD,CAAH,KAAW,IAAf,EAAqB;AACjBA,MAAAA,CAAC;AACJ,KAFD,MAEO,IAAImK,GAAG,CAACnK,CAAD,CAAH,KAAWL,CAAC,CAAC,CAAD,CAAhB,EAAqB;AACxB+F,MAAAA,KAAK;AACR,KAFM,MAEA,IAAIyE,GAAG,CAACnK,CAAD,CAAH,KAAWL,CAAC,CAAC,CAAD,CAAhB,EAAqB;AACxB+F,MAAAA,KAAK;;AACL,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,eAAO1F,CAAP;AACH;AACJ;AACJ;;AACD,SAAO,CAAC,CAAR;AACH;;AAED,SAAS2K,wBAAT,CAAkC3B,GAAlC,EAAuC;AACnC,MAAIA,GAAG,IAAIA,GAAG,CAAC5G,QAAX,IAAuB,CAAC4G,GAAG,CAACnB,MAAhC,EAAwC;AACpCC,IAAAA,OAAO,CAAC8C,IAAR,CAAa,wMAAb;AACH;AACJ;AAED;;;;;AAIA,SAAS9L,KAAT,CAAeI,GAAf,EAAoB8J,GAApB,EAAyB6B,QAAzB,EAAmC;AAC/B;AACA,MAAI,OAAO3L,GAAP,KAAe,WAAf,IAA8BA,GAAG,KAAK,IAA1C,EAAgD;AAC5C,UAAM,IAAIyD,KAAJ,CAAU,+CAAV,CAAN;AACH;;AACD,MAAI,OAAOzD,GAAP,KAAe,QAAnB,EAA6B;AACzB,UAAM,IAAIyD,KAAJ,CAAU,yCACV/D,MAAM,CAACQ,SAAP,CAAiBgG,QAAjB,CAA0B2E,IAA1B,CAA+B7K,GAA/B,CADU,GAC4B,mBADtC,CAAN;AAEH;;AAED,MAAI2L,QAAQ,IAAI,OAAO7B,GAAP,KAAe,UAA/B,EAA2C;AACvC,QAAI,CAAC6B,QAAL,EAAe;AACXA,MAAAA,QAAQ,GAAG7B,GAAX;AACAA,MAAAA,GAAG,GAAG,IAAN;AACH;;AAEDA,IAAAA,GAAG,GAAG3K,KAAK,CAAC,EAAD,EAAKS,KAAK,CAACC,QAAX,EAAqBiK,GAAG,IAAI,EAA5B,CAAX;AACA2B,IAAAA,wBAAwB,CAAC3B,GAAD,CAAxB;AAEA,QAAIzD,SAAS,GAAGyD,GAAG,CAACzD,SAApB;AAAA,QACI7G,MADJ;AAAA,QAEIoM,OAFJ;AAAA,QAGI9K,CAAC,GAAG,CAHR;;AAKA,QAAI;AACAtB,MAAAA,MAAM,GAAGF,KAAK,CAACS,GAAN,CAAUC,GAAV,EAAe8J,GAAf,CAAT;AACH,KAFD,CAEE,OAAOM,CAAP,EAAU;AACR,aAAOuB,QAAQ,CAACvB,CAAD,CAAf;AACH;;AAEDwB,IAAAA,OAAO,GAAGpM,MAAM,CAAC8B,MAAjB;;AAEA,QAAIuK,IAAI,GAAG,SAAPA,IAAO,CAAUC,GAAV,EAAe;AACtB,UAAIA,GAAJ,EAAS;AACLhC,QAAAA,GAAG,CAACzD,SAAJ,GAAgBA,SAAhB;AACA,eAAOsF,QAAQ,CAACG,GAAD,CAAf;AACH;;AAED,UAAI5G,GAAJ;;AAEA,UAAI;AACAA,QAAAA,GAAG,GAAG0C,MAAM,CAACE,KAAP,CAAatI,MAAb,EAAqBsK,GAArB,CAAN;AACH,OAFD,CAEE,OAAOM,CAAP,EAAU;AACR0B,QAAAA,GAAG,GAAG1B,CAAN;AACH;;AAEDN,MAAAA,GAAG,CAACzD,SAAJ,GAAgBA,SAAhB;AAEA,aAAOyF,GAAG,GACJH,QAAQ,CAACG,GAAD,CADJ,GAEJH,QAAQ,CAAC,IAAD,EAAOzG,GAAP,CAFd;AAGH,KAnBD;;AAqBA,QAAI,CAACmB,SAAD,IAAcA,SAAS,CAAC/E,MAAV,GAAmB,CAArC,EAAwC;AACpC,aAAOuK,IAAI,EAAX;AACH;;AAED,WAAO/B,GAAG,CAACzD,SAAX;AAEA,QAAI,CAACuF,OAAL,EAAc,OAAOC,IAAI,EAAX;;AAEd,WAAO/K,CAAC,GAAGtB,MAAM,CAAC8B,MAAlB,EAA0BR,CAAC,EAA3B,EAA+B;AAC3B,OAAC,UAAUX,KAAV,EAAiB;AACd,YAAIA,KAAK,CAACqB,IAAN,KAAe,MAAnB,EAA2B;AACvB,iBAAO,EAAEoK,OAAF,IAAaC,IAAI,EAAxB;AACH;;AACD,eAAOxF,SAAS,CAAClG,KAAK,CAAC7B,IAAP,EAAa6B,KAAK,CAAC0B,IAAnB,EAAyB,UAAUiK,GAAV,EAAerO,IAAf,EAAqB;AAC1D,cAAIqO,GAAJ,EAAS,OAAOD,IAAI,CAACC,GAAD,CAAX;;AACT,cAAIrO,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK0C,KAAK,CAAC7B,IAAnC,EAAyC;AACrC,mBAAO,EAAEsN,OAAF,IAAaC,IAAI,EAAxB;AACH;;AACD1L,UAAAA,KAAK,CAAC7B,IAAN,GAAab,IAAb;AACA0C,UAAAA,KAAK,CAACiG,OAAN,GAAgB,IAAhB;AACA,YAAEwF,OAAF,IAAaC,IAAI,EAAjB;AACH,SARe,CAAhB;AASH,OAbD,EAaGrM,MAAM,CAACsB,CAAD,CAbT;AAcH;;AAED;AACH;;AACD,MAAI;AACA,QAAIgJ,GAAJ,EAASA,GAAG,GAAG3K,KAAK,CAAC,EAAD,EAAKS,KAAK,CAACC,QAAX,EAAqBiK,GAArB,CAAX;AACT2B,IAAAA,wBAAwB,CAAC3B,GAAD,CAAxB;AACA,WAAOlC,MAAM,CAACE,KAAP,CAAaxI,KAAK,CAACS,GAAN,CAAUC,GAAV,EAAe8J,GAAf,CAAb,EAAkCA,GAAlC,CAAP;AACH,GAJD,CAIE,OAAOM,CAAP,EAAU;AACRA,IAAAA,CAAC,CAAC2B,OAAF,IAAa,6DAAb;;AACA,QAAI,CAACjC,GAAG,IAAIlK,KAAK,CAACC,QAAd,EAAwB8I,MAA5B,EAAoC;AAChC,aAAO,mCACDtF,MAAM,CAAC+G,CAAC,CAAC2B,OAAF,GAAY,EAAb,EAAiB,IAAjB,CADL,GAED,QAFN;AAGH;;AACD,UAAM3B,CAAN;AACH;AACJ;AAED;;;;;AAIAxK,KAAK,CAACL,OAAN,GACIK,KAAK,CAACoM,UAAN,GAAmB,UAAUlC,GAAV,EAAe;AAC9B3K,EAAAA,KAAK,CAACS,KAAK,CAACC,QAAP,EAAiBiK,GAAjB,CAAL;AACA,SAAOlK,KAAP;AACH,CAJL;;AAMAA,KAAK,CAACqM,WAAN,GAAoB,YAAY;AAC5B,SAAO;AACHvE,IAAAA,OAAO,EAAE,IADN;AAEH7C,IAAAA,MAAM,EAAE,KAFL;AAGHzF,IAAAA,GAAG,EAAE,IAHF;AAIHuH,IAAAA,SAAS,EAAE,IAJR;AAKHC,IAAAA,YAAY,EAAE,EALX;AAMHP,IAAAA,SAAS,EAAE,IANR;AAOHC,IAAAA,UAAU,EAAE,WAPT;AAQHV,IAAAA,MAAM,EAAE,IARL;AASHvG,IAAAA,QAAQ,EAAE,KATP;AAUH0F,IAAAA,QAAQ,EAAE,IAAIC,QAAJ,EAVP;AAWH9B,IAAAA,QAAQ,EAAE,KAXP;AAYHE,IAAAA,SAAS,EAAE,IAZR;AAaHuF,IAAAA,MAAM,EAAE,KAbL;AAcHhG,IAAAA,UAAU,EAAE,KAdT;AAeHkD,IAAAA,WAAW,EAAE,KAfV;AAgBHiB,IAAAA,KAAK,EAAE;AAhBJ,GAAP;AAkBH,CAnBD;;AAqBAlH,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACqM,WAAN,EAAjB;AAEA;;;;AAIArM,KAAK,CAACgI,MAAN,GAAeA,MAAf;AACAhI,KAAK,CAACmI,MAAN,GAAeH,MAAM,CAACE,KAAtB;AAEAlI,KAAK,CAACoF,QAAN,GAAiBA,QAAjB;AACApF,KAAK,CAAC+H,YAAN,GAAqBA,YAArB;AAEA/H,KAAK,CAACN,KAAN,GAAcA,KAAd;AACAM,KAAK,CAACK,KAAN,GAAcX,KAAK,CAACS,GAApB;AAEAH,KAAK,CAACkF,WAAN,GAAoBA,WAApB;AACAlF,KAAK,CAACsM,WAAN,GAAoBpH,WAAW,CAACG,MAAhC;AAEArF,KAAK,CAACiI,OAAN,GAAgBA,OAAhB;AAEAjI,KAAK,CAACkI,KAAN,GAAclI,KAAd;AAEA,eAAeA,KAAf","sourcesContent":["var block = {\r\n    newline: /^\\n+/,\r\n    code: /^( {4}[^\\n]+\\n*)+/,\r\n    fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\r\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\r\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\r\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\r\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n    html: '^ {0,3}(?:' // optional indentation\r\n        + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\r\n        + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\r\n        + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\r\n        + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\r\n        + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\r\n        + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\r\n        + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\r\n        + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\r\n        + ')',\r\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\r\n    nptable: noop,\r\n    table: noop,\r\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\r\n    // regex template, placeholders will be replaced according to different paragraph\r\n    // interruption rules of commonmark and the original src spec:\r\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\r\n    text: /^[^\\n]+/\r\n};\r\n\r\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\r\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\r\nblock.def = edit(block.def)\r\n    .replace('label', block._label)\r\n    .replace('title', block._title)\r\n    .getRegex();\r\n\r\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\r\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\r\nblock.item = edit(block.item, 'gm')\r\n    .replace(/bull/g, block.bullet)\r\n    .getRegex();\r\n\r\nblock.list = edit(block.list)\r\n    .replace(/bull/g, block.bullet)\r\n    .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\r\n    .replace('def', '\\\\n+(?=' + block.def.source + ')')\r\n    .getRegex();\r\n\r\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\r\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\r\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\r\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\r\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\r\n    + '|track|ul';\r\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\r\nblock.html = edit(block.html, 'i')\r\n    .replace('comment', block._comment)\r\n    .replace('tag', block._tag)\r\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\r\n    .getRegex();\r\n\r\nblock.paragraph = edit(block._paragraph)\r\n    .replace('hr', block.hr)\r\n    .replace('heading', ' {0,3}#{1,6} +')\r\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\r\n    .replace('blockquote', ' {0,3}>')\r\n    .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n')\r\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\r\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\r\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\r\n    .getRegex();\r\n\r\nblock.blockquote = edit(block.blockquote)\r\n    .replace('paragraph', block.paragraph)\r\n    .getRegex();\r\n\r\n/**\r\n * Normal Block Grammar\r\n */\r\n\r\nblock.normal = merge({}, block);\r\n\r\n/**\r\n * GFM Block Grammar\r\n */\r\n\r\nblock.gfm = merge({}, block.normal, {\r\n    nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\r\n    table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\r\n});\r\n\r\n/**\r\n * Pedantic grammar (original John Gruber's loose src specification)\r\n */\r\n\r\nblock.pedantic = merge({}, block.normal, {\r\n    html: edit(\r\n        '^ *(?:comment *(?:\\\\n|\\\\s*$)'\r\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\r\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\r\n        .replace('comment', block._comment)\r\n        .replace(/tag/g, '(?!(?:'\r\n            + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\r\n            + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\r\n            + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\r\n        .getRegex(),\r\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\r\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\r\n    fences: noop, // fences not supported\r\n    paragraph: edit(block.normal._paragraph)\r\n        .replace('hr', block.hr)\r\n        .replace('heading', ' *#{1,6} *[^\\n]')\r\n        .replace('lheading', block.lheading)\r\n        .replace('blockquote', ' {0,3}>')\r\n        .replace('|fences', '')\r\n        .replace('|list', '')\r\n        .replace('|html', '')\r\n        .getRegex()\r\n});\r\n\r\n/**\r\n * Block Lexer\r\n */\r\n\r\nfunction Lexer(options) {\r\n    this.tokens = [];\r\n    this.tokens.links = Object.create(null);\r\n    this.options = options || index.defaults;\r\n    this.rules = block.normal;\r\n\r\n    if (this.options.pedantic) {\r\n        this.rules = block.pedantic;\r\n    } else if (this.options.gfm) {\r\n        this.rules = block.gfm;\r\n    }\r\n}\r\n\r\n/**\r\n * Expose Block Rules\r\n */\r\n\r\nLexer.rules = block;\r\n\r\n/**\r\n * Static Lex Method\r\n */\r\n\r\nLexer.lex = function (src, options) {\r\n    var lexer = new Lexer(options);\r\n    return lexer.lex(src);\r\n};\r\n\r\n/**\r\n * Preprocessing\r\n */\r\n\r\nLexer.prototype.lex = function (src) {\r\n    src = src\r\n        .replace(/\\r\\n|\\r/g, '\\n')\r\n        .replace(/\\t/g, '    ')\r\n        .replace(/\\u00a0/g, ' ')\r\n        .replace(/\\u2424/g, '\\n');\r\n\r\n    return this.token(src, true);\r\n};\r\n\r\n/**\r\n * Lexing\r\n */\r\n\r\nLexer.prototype.token = function (src, top) {\r\n    src = src.replace(/^ +$/gm, '');\r\n    var next,\r\n        loose,\r\n        cap,\r\n        bull,\r\n        b,\r\n        item,\r\n        listStart,\r\n        listItems,\r\n        t,\r\n        space,\r\n        i,\r\n        tag,\r\n        l,\r\n        isordered,\r\n        istask,\r\n        ischecked;\r\n\r\n    while (src) {\r\n        // newline\r\n        if (cap = this.rules.newline.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            if (cap[0].length > 1) {\r\n                this.tokens.push({\r\n                    type: 'space'\r\n                });\r\n            }\r\n        }\r\n\r\n        // code\r\n        if (cap = this.rules.code.exec(src)) {\r\n            var lastToken = this.tokens[this.tokens.length - 1];\r\n            src = src.substring(cap[0].length);\r\n            // An indented code block cannot interrupt a paragraph.\r\n            if (lastToken && lastToken.type === 'paragraph') {\r\n                lastToken.text += '\\n' + cap[0].trimRight();\r\n            } else {\r\n                cap = cap[0].replace(/^ {4}/gm, '');\r\n                this.tokens.push({\r\n                    type: 'code',\r\n                    codeBlockStyle: 'indented',\r\n                    text: !this.options.pedantic\r\n                        ? rtrim(cap, '\\n')\r\n                        : cap\r\n                });\r\n            }\r\n            continue;\r\n        }\r\n\r\n        // fences\r\n        if (cap = this.rules.fences.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: 'code',\r\n                lang: cap[2] ? cap[2].trim() : cap[2],\r\n                text: cap[3] || ''\r\n            });\r\n            continue;\r\n        }\r\n\r\n        // heading\r\n        if (cap = this.rules.heading.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: 'heading',\r\n                depth: cap[1].length,\r\n                text: cap[2]\r\n            });\r\n            continue;\r\n        }\r\n\r\n        // table no leading pipe (gfm)\r\n        if (cap = this.rules.nptable.exec(src)) {\r\n            item = {\r\n                type: 'table',\r\n                header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\r\n                align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n                cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\r\n            };\r\n\r\n            if (item.header.length === item.align.length) {\r\n                src = src.substring(cap[0].length);\r\n\r\n                for (i = 0; i < item.align.length; i++) {\r\n                    if (/^ *-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'right';\r\n                    } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'center';\r\n                    } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n                        item.align[i] = 'left';\r\n                    } else {\r\n                        item.align[i] = null;\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < item.cells.length; i++) {\r\n                    item.cells[i] = splitCells(item.cells[i], item.header.length);\r\n                }\r\n\r\n                this.tokens.push(item);\r\n\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // hr\r\n        if (cap = this.rules.hr.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: 'hr'\r\n            });\r\n            continue;\r\n        }\r\n\r\n        // blockquote\r\n        if (cap = this.rules.blockquote.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n\r\n            this.tokens.push({\r\n                type: 'blockquote_start'\r\n            });\r\n\r\n            cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n            // Pass `top` to keep the current\r\n            // \"toplevel\" state. This is exactly\r\n            // how src.pl works.\r\n            this.token(cap, top);\r\n\r\n            this.tokens.push({\r\n                type: 'blockquote_end'\r\n            });\r\n\r\n            continue;\r\n        }\r\n\r\n        // list\r\n        if (cap = this.rules.list.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            bull = cap[2];\r\n            isordered = bull.length > 1;\r\n\r\n            listStart = {\r\n                type: 'list_start',\r\n                ordered: isordered,\r\n                start: isordered ? +bull : '',\r\n                loose: false\r\n            };\r\n            this.tokens.push(listStart);\r\n\r\n            // Get each top-level item.\r\n            cap = cap[0].match(this.rules.item);\r\n\r\n            listItems = [];\r\n            next = false;\r\n            l = cap.length;\r\n            i = 0;\r\n\r\n            for (; i < l; i++) {\r\n                item = cap[i];\r\n\r\n                // Remove the list item's bullet\r\n                // so it is seen as the next token.\r\n                space = item.length;\r\n                item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\r\n\r\n                // Outdent whatever the\r\n                // list item contains. Hacky.\r\n                if (~item.indexOf('\\n ')) {\r\n                    space -= item.length;\r\n                    item = !this.options.pedantic\r\n                        ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n                        : item.replace(/^ {1,4}/gm, '');\r\n                }\r\n\r\n                // Determine whether the next list item belongs here.\r\n                // Backpedal if it does not belong in this list.\r\n                if (i !== l - 1) {\r\n                    b = block.bullet.exec(cap[i + 1])[0];\r\n                    if (bull.length > 1 ? b.length === 1\r\n                        : (b.length > 1 || (this.options.smartLists && b !== bull))) {\r\n                        src = cap.slice(i + 1).join('\\n') + src;\r\n                        i = l - 1;\r\n                    }\r\n                }\r\n\r\n                // Determine whether item is loose or not.\r\n                // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n                // for discount behavior.\r\n                loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n                if (i !== l - 1) {\r\n                    next = item.charAt(item.length - 1) === '\\n';\r\n                    if (!loose) loose = next;\r\n                }\r\n\r\n                if (loose) {\r\n                    listStart.loose = true;\r\n                }\r\n\r\n                // Check for task list items\r\n                istask = /^\\[[ xX]\\] /.test(item);\r\n                ischecked = undefined;\r\n                if (istask) {\r\n                    ischecked = item[1] !== ' ';\r\n                    item = item.replace(/^\\[[ xX]\\] +/, '');\r\n                }\r\n\r\n                t = {\r\n                    type: 'list_item_start',\r\n                    task: istask,\r\n                    checked: ischecked,\r\n                    loose: loose\r\n                };\r\n\r\n                listItems.push(t);\r\n                this.tokens.push(t);\r\n\r\n                // Recurse.\r\n                this.token(item, false);\r\n\r\n                this.tokens.push({\r\n                    type: 'list_item_end'\r\n                });\r\n            }\r\n\r\n            if (listStart.loose) {\r\n                l = listItems.length;\r\n                i = 0;\r\n                for (; i < l; i++) {\r\n                    listItems[i].loose = true;\r\n                }\r\n            }\r\n\r\n            this.tokens.push({\r\n                type: 'list_end'\r\n            });\r\n\r\n            continue;\r\n        }\r\n\r\n        // html\r\n        if (cap = this.rules.html.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: this.options.sanitize\r\n                    ? 'paragraph'\r\n                    : 'html',\r\n                pre: !this.options.sanitizer\r\n                    && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\r\n                text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\r\n            });\r\n            continue;\r\n        }\r\n\r\n        // def\r\n        if (top && (cap = this.rules.def.exec(src))) {\r\n            src = src.substring(cap[0].length);\r\n            if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\r\n            tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\r\n            if (!this.tokens.links[tag]) {\r\n                this.tokens.links[tag] = {\r\n                    href: cap[2],\r\n                    title: cap[3]\r\n                };\r\n            }\r\n            continue;\r\n        }\r\n\r\n        // table (gfm)\r\n        if (cap = this.rules.table.exec(src)) {\r\n            item = {\r\n                type: 'table',\r\n                header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\r\n                align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n                cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\r\n            };\r\n\r\n            if (item.header.length === item.align.length) {\r\n                src = src.substring(cap[0].length);\r\n\r\n                for (i = 0; i < item.align.length; i++) {\r\n                    if (/^ *-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'right';\r\n                    } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'center';\r\n                    } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n                        item.align[i] = 'left';\r\n                    } else {\r\n                        item.align[i] = null;\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < item.cells.length; i++) {\r\n                    item.cells[i] = splitCells(\r\n                        item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\r\n                        item.header.length);\r\n                }\r\n\r\n                this.tokens.push(item);\r\n\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // lheading\r\n        if (cap = this.rules.lheading.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: 'heading',\r\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\r\n                text: cap[1]\r\n            });\r\n            continue;\r\n        }\r\n\r\n        // top-level paragraph\r\n        if (top && (cap = this.rules.paragraph.exec(src))) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: 'paragraph',\r\n                text: cap[1].charAt(cap[1].length - 1) === '\\n'\r\n                    ? cap[1].slice(0, -1)\r\n                    : cap[1]\r\n            });\r\n            continue;\r\n        }\r\n        if (cap = this.rules.text.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            this.tokens.push({\r\n                type: 'text',\r\n                text: cap[0]\r\n            });\r\n            continue;\r\n        }\r\n\r\n        if (src) {\r\n            throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n        }\r\n    }\r\n    return this.tokens;\r\n};\r\n\r\n/**\r\n * Inline-Level Grammar\r\n */\r\n\r\nvar inline = {\r\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\r\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\r\n    url: noop,\r\n    tag: '^comment'\r\n        + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\r\n        + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\r\n        + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\r\n        + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\r\n        + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\r\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\r\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\r\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\r\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\r\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\r\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\r\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\r\n    del: noop,\r\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\r\n};\r\n\r\n// list of punctuation marks from common mark spec\r\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\r\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\r\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\r\n\r\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\r\n\r\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\r\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\r\ninline.autolink = edit(inline.autolink)\r\n    .replace('scheme', inline._scheme)\r\n    .replace('email', inline._email)\r\n    .getRegex();\r\n\r\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\r\n\r\ninline.tag = edit(inline.tag)\r\n    .replace('comment', block._comment)\r\n    .replace('attribute', inline._attribute)\r\n    .getRegex();\r\n\r\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\r\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\r\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\r\n\r\ninline.link = edit(inline.link)\r\n    .replace('label', inline._label)\r\n    .replace('href', inline._href)\r\n    .replace('title', inline._title)\r\n    .getRegex();\r\n\r\ninline.reflink = edit(inline.reflink)\r\n    .replace('label', inline._label)\r\n    .getRegex();\r\n\r\n/**\r\n * Normal Inline Grammar\r\n */\r\n\r\ninline.normal = merge({}, inline);\r\n\r\n/**\r\n * Pedantic Inline Grammar\r\n */\r\n\r\ninline.pedantic = merge({}, inline.normal, {\r\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\r\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\r\n        .replace('label', inline._label)\r\n        .getRegex(),\r\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\r\n        .replace('label', inline._label)\r\n        .getRegex()\r\n});\r\n\r\n/**\r\n * GFM Inline Grammar\r\n */\r\n\r\ninline.gfm = merge({}, inline.normal, {\r\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\r\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\r\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\r\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\r\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\r\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\r\n});\r\n\r\ninline.gfm.url = edit(inline.gfm.url, 'i')\r\n    .replace('email', inline.gfm._extended_email)\r\n    .getRegex();\r\n/**\r\n * GFM + Line Breaks Inline Grammar\r\n */\r\n\r\ninline.breaks = merge({}, inline.gfm, {\r\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\r\n    text: edit(inline.gfm.text)\r\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\r\n        .replace(/\\{2,\\}/g, '*')\r\n        .getRegex()\r\n});\r\n\r\n/**\r\n * Inline Lexer & Compiler\r\n */\r\n\r\nfunction InlineLexer(links, options) {\r\n    this.options = options || index.defaults;\r\n    this.links = links;\r\n    this.rules = inline.normal;\r\n    this.renderer = this.options.renderer || new Renderer();\r\n    this.renderer.options = this.options;\r\n\r\n    if (!this.links) {\r\n        throw new Error('Tokens array requires a `links` property.');\r\n    }\r\n\r\n    if (this.options.pedantic) {\r\n        this.rules = inline.pedantic;\r\n    } else if (this.options.gfm) {\r\n        if (this.options.breaks) {\r\n            this.rules = inline.breaks;\r\n        } else {\r\n            this.rules = inline.gfm;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Expose Inline Rules\r\n */\r\n\r\nInlineLexer.rules = inline;\r\n\r\n/**\r\n * Static Lexing/Compiling Method\r\n */\r\n\r\nInlineLexer.output = function (src, links, options) {\r\n    var inline = new InlineLexer(links, options);\r\n    return inline.output(src);\r\n};\r\n\r\n/**\r\n * Lexing/Compiling\r\n */\r\n\r\nInlineLexer.prototype.output = function (src) {\r\n    var out = '',\r\n        link,\r\n        text,\r\n        href,\r\n        title,\r\n        cap,\r\n        prevCapZero;\r\n\r\n    while (src) {\r\n        // escape\r\n        if (cap = this.rules.escape.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            out += escape(cap[1]);\r\n            continue;\r\n        }\r\n\r\n        // tag\r\n        if (cap = this.rules.tag.exec(src)) {\r\n            if (!this.inLink && /^<a /i.test(cap[0])) {\r\n                this.inLink = true;\r\n            } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\r\n                this.inLink = false;\r\n            }\r\n            if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\r\n                this.inRawBlock = true;\r\n            } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\r\n                this.inRawBlock = false;\r\n            }\r\n\r\n            src = src.substring(cap[0].length);\r\n            out += this.options.sanitize\r\n                ? this.options.sanitizer\r\n                    ? this.options.sanitizer(cap[0])\r\n                    : escape(cap[0])\r\n                : cap[0];\r\n            continue;\r\n        }\r\n\r\n        // link\r\n        if (cap = this.rules.link.exec(src)) {\r\n            var lastParenIndex = findClosingBracket(cap[2], '()');\r\n            if (lastParenIndex > -1) {\r\n                var linkLen = 4 + cap[1].length + lastParenIndex;\r\n                cap[2] = cap[2].substring(0, lastParenIndex);\r\n                cap[0] = cap[0].substring(0, linkLen).trim();\r\n                cap[3] = '';\r\n            }\r\n            src = src.substring(cap[0].length);\r\n            this.inLink = true;\r\n            href = cap[2];\r\n            if (this.options.pedantic) {\r\n                link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\r\n\r\n                if (link) {\r\n                    href = link[1];\r\n                    title = link[3];\r\n                } else {\r\n                    title = '';\r\n                }\r\n            } else {\r\n                title = cap[3] ? cap[3].slice(1, -1) : '';\r\n            }\r\n            href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\r\n            out += this.outputLink(cap, {\r\n                href: InlineLexer.escapes(href),\r\n                title: InlineLexer.escapes(title)\r\n            });\r\n            this.inLink = false;\r\n            continue;\r\n        }\r\n\r\n        // reflink, nolink\r\n        if ((cap = this.rules.reflink.exec(src))\r\n            || (cap = this.rules.nolink.exec(src))) {\r\n            src = src.substring(cap[0].length);\r\n            link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n            link = this.links[link.toLowerCase()];\r\n            if (!link || !link.href) {\r\n                out += cap[0].charAt(0);\r\n                src = cap[0].substring(1) + src;\r\n                continue;\r\n            }\r\n            this.inLink = true;\r\n            out += this.outputLink(cap, link);\r\n            this.inLink = false;\r\n            continue;\r\n        }\r\n\r\n        // strong\r\n        if (cap = this.rules.strong.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\r\n            continue;\r\n        }\r\n\r\n        // em\r\n        if (cap = this.rules.em.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\r\n            continue;\r\n        }\r\n\r\n        // code\r\n        if (cap = this.rules.code.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            out += this.renderer.codespan(escape(cap[2].trim(), true));\r\n            continue;\r\n        }\r\n\r\n        // br\r\n        if (cap = this.rules.br.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            out += this.renderer.br();\r\n            continue;\r\n        }\r\n\r\n        // del (gfm)\r\n        if (cap = this.rules.del.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            out += this.renderer.del(this.output(cap[1]));\r\n            continue;\r\n        }\r\n\r\n        // autolink\r\n        if (cap = this.rules.autolink.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            if (cap[2] === '@') {\r\n                text = escape(this.mangle(cap[1]));\r\n                href = 'mailto:' + text;\r\n            } else {\r\n                text = escape(cap[1]);\r\n                href = text;\r\n            }\r\n            out += this.renderer.link(href, null, text);\r\n            continue;\r\n        }\r\n\r\n        // url (gfm)\r\n        if (!this.inLink && (cap = this.rules.url.exec(src))) {\r\n            if (cap[2] === '@') {\r\n                text = escape(cap[0]);\r\n                href = 'mailto:' + text;\r\n            } else {\r\n                // do extended autolink path validation\r\n                do {\r\n                    prevCapZero = cap[0];\r\n                    cap[0] = this.rules._backpedal.exec(cap[0])[0];\r\n                } while (prevCapZero !== cap[0]);\r\n                text = escape(cap[0]);\r\n                if (cap[1] === 'www.') {\r\n                    href = 'http://' + text;\r\n                } else {\r\n                    href = text;\r\n                }\r\n            }\r\n            src = src.substring(cap[0].length);\r\n            out += this.renderer.link(href, null, text);\r\n            continue;\r\n        }\r\n\r\n        // text\r\n        if (cap = this.rules.text.exec(src)) {\r\n            src = src.substring(cap[0].length);\r\n            if (this.inRawBlock) {\r\n                out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\r\n            } else {\r\n                out += this.renderer.text(escape(this.smartypants(cap[0])));\r\n            }\r\n            continue;\r\n        }\r\n\r\n        if (src) {\r\n            throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nInlineLexer.escapes = function (text) {\r\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\r\n};\r\n\r\n/**\r\n * Compile Link\r\n */\r\n\r\nInlineLexer.prototype.outputLink = function (cap, link) {\r\n    var href = link.href,\r\n        title = link.title ? escape(link.title) : null;\r\n\r\n    return cap[0].charAt(0) !== '!'\r\n        ? this.renderer.link(href, title, this.output(cap[1]))\r\n        : this.renderer.image(href, title, escape(cap[1]));\r\n};\r\n\r\n/**\r\n * Smartypants Transformations\r\n */\r\n\r\nInlineLexer.prototype.smartypants = function (text) {\r\n    if (!this.options.smartypants) return text;\r\n    return text\r\n    // em-dashes\r\n        .replace(/---/g, '\\u2014')\r\n        // en-dashes\r\n        .replace(/--/g, '\\u2013')\r\n        // opening singles\r\n        .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n        // closing singles & apostrophes\r\n        .replace(/'/g, '\\u2019')\r\n        // opening doubles\r\n        .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n        // closing doubles\r\n        .replace(/\"/g, '\\u201d')\r\n        // ellipses\r\n        .replace(/\\.{3}/g, '\\u2026');\r\n};\r\n\r\n/**\r\n * Mangle Links\r\n */\r\n\r\nInlineLexer.prototype.mangle = function (text) {\r\n    if (!this.options.mangle) return text;\r\n    var out = '',\r\n        l = text.length,\r\n        i = 0,\r\n        ch;\r\n\r\n    for (; i < l; i++) {\r\n        ch = text.charCodeAt(i);\r\n        if (Math.random() > 0.5) {\r\n            ch = 'x' + ch.toString(16);\r\n        }\r\n        out += '&#' + ch + ';';\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n/**\r\n * Renderer\r\n */\r\n\r\nfunction Renderer(options) {\r\n    this.options = options || index.defaults;\r\n}\r\n\r\nRenderer.prototype.code = function (code, infostring, escaped) {\r\n    var lang = (infostring || '').match(/\\S*/)[0];\r\n    if (this.options.highlight) {\r\n        var out = this.options.highlight(code, lang);\r\n        if (out != null && out !== code) {\r\n            escaped = true;\r\n            code = out;\r\n        }\r\n    }\r\n\r\n    if (!lang) {\r\n        return '<pre><code>'\r\n            + (escaped ? code : escape(code, true))\r\n            + '</code></pre>';\r\n    }\r\n\r\n    return '<pre><code class=\"'\r\n        + this.options.langPrefix\r\n        + escape(lang, true)\r\n        + '\">'\r\n        + (escaped ? code : escape(code, true))\r\n        + '</code></pre>\\n';\r\n};\r\n\r\nRenderer.prototype.blockquote = function (quote) {\r\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\r\n};\r\n\r\nRenderer.prototype.html = function (html) {\r\n    return html;\r\n};\r\n\r\nRenderer.prototype.heading = function (text, level, raw, slugger) {\r\n    if (this.options.headerIds) {\r\n        return '<h'\r\n            + level\r\n            + ' id=\"'\r\n            + this.options.headerPrefix\r\n            + slugger.slug(raw)\r\n            + '\">'\r\n            + text\r\n            + '</h'\r\n            + level\r\n            + '>\\n';\r\n    }\r\n    // ignore IDs\r\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\r\n};\r\n\r\nRenderer.prototype.hr = function () {\r\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\r\n};\r\n\r\nRenderer.prototype.list = function (body, ordered, start) {\r\n    var type = ordered ? 'ol' : 'ul',\r\n        startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\r\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\r\n};\r\n\r\nRenderer.prototype.listitem = function (text) {\r\n    const reg = /\\<input.+\\>/;\r\n    let className = '';\r\n    if(reg.test(text)){\r\n        className = 'list-item-checkbox';\r\n        if(/checked/.test(text)){\r\n            className += ' list-item-checkbox-checked';\r\n        }\r\n    }\r\n    return `<li class=\"${className} \">${text}</li>\\n`;\r\n};\r\n\r\nRenderer.prototype.checkbox = function (checked) {\r\n    return '<input '\r\n        + (checked ? 'checked ' : '')\r\n        + 'disabled type=\"checkbox\"'\r\n        + (this.options.xhtml ? ' /' : '')\r\n        + '> ';\r\n};\r\n\r\nRenderer.prototype.paragraph = function (text) {\r\n    return '<p>' + text + '</p>\\n';\r\n};\r\n\r\nRenderer.prototype.table = function (header, body) {\r\n    if (body) body = '<tbody>' + body + '</tbody>';\r\n\r\n    return '<table>\\n'\r\n        + '<thead>\\n'\r\n        + header\r\n        + '</thead>\\n'\r\n        + body\r\n        + '</table>\\n';\r\n};\r\n\r\nRenderer.prototype.tablerow = function (content) {\r\n    return '<tr>\\n' + content + '</tr>\\n';\r\n};\r\n\r\nRenderer.prototype.tablecell = function (content, flags) {\r\n    var type = flags.header ? 'th' : 'td';\r\n    var tag = flags.align\r\n        ? '<' + type + ' align=\"' + flags.align + '\">'\r\n        : '<' + type + '>';\r\n    return tag + content + '</' + type + '>\\n';\r\n};\r\n\r\n// span level renderer\r\nRenderer.prototype.strong = function (text) {\r\n    return '<strong>' + text + '</strong>';\r\n};\r\n\r\nRenderer.prototype.em = function (text) {\r\n    return '<em>' + text + '</em>';\r\n};\r\n\r\nRenderer.prototype.codespan = function (text) {\r\n    return '<code>' + text + '</code>';\r\n};\r\n\r\nRenderer.prototype.br = function () {\r\n    return this.options.xhtml ? '<br/>' : '<br>';\r\n};\r\n\r\nRenderer.prototype.del = function (text) {\r\n    return '<del>' + text + '</del>';\r\n};\r\n\r\nRenderer.prototype.link = function (href, title, text) {\r\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\r\n    if (href === null) {\r\n        return text;\r\n    }\r\n    var out = '<a href=\"' + escape(href) + '\"';\r\n    if (title) {\r\n        out += ' title=\"' + title + '\"';\r\n    }\r\n    out += '>' + text + '</a>';\r\n    return out;\r\n};\r\n\r\nRenderer.prototype.image = function (href, title, text) {\r\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\r\n    if (href === null) {\r\n        return text;\r\n    }\r\n\r\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\r\n    if (title) {\r\n        out += ' title=\"' + title + '\"';\r\n    }\r\n    out += this.options.xhtml ? '/>' : '>';\r\n    return out;\r\n};\r\n\r\nRenderer.prototype.text = function (text) {\r\n    return text;\r\n};\r\n\r\n/**\r\n * TextRenderer\r\n * returns only the textual part of the token\r\n */\r\n\r\nfunction TextRenderer() {\r\n}\r\n\r\n// no need for block level renderers\r\n\r\nTextRenderer.prototype.strong =\r\n    TextRenderer.prototype.em =\r\n        TextRenderer.prototype.codespan =\r\n            TextRenderer.prototype.del =\r\n                TextRenderer.prototype.text = function (text) {\r\n                    return text;\r\n                };\r\n\r\nTextRenderer.prototype.link =\r\n    TextRenderer.prototype.image = function (href, title, text) {\r\n        return '' + text;\r\n    };\r\n\r\nTextRenderer.prototype.br = function () {\r\n    return '';\r\n};\r\n\r\n/**\r\n * Parsing & Compiling\r\n */\r\n\r\nfunction Parser(options) {\r\n    this.tokens = [];\r\n    this.token = null;\r\n    this.options = options || index.defaults;\r\n    this.options.renderer = this.options.renderer || new Renderer();\r\n    this.renderer = this.options.renderer;\r\n    this.renderer.options = this.options;\r\n    this.slugger = new Slugger();\r\n}\r\n\r\n/**\r\n * Static Parse Method\r\n */\r\n\r\nParser.parse = function (src, options) {\r\n    var parser = new Parser(options);\r\n    return parser.parse(src);\r\n};\r\n\r\n/**\r\n * Parse Loop\r\n */\r\n\r\nParser.prototype.parse = function (src) {\r\n    this.inline = new InlineLexer(src.links, this.options);\r\n    // use an InlineLexer with a TextRenderer to extract pure text\r\n    this.inlineText = new InlineLexer(\r\n        src.links,\r\n        merge({}, this.options, {renderer: new TextRenderer()})\r\n    );\r\n    this.tokens = src.reverse();\r\n\r\n    var out = '';\r\n    while (this.next()) {\r\n        out += this.tok();\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n/**\r\n * Next Token\r\n */\r\n\r\nParser.prototype.next = function () {\r\n    this.token = this.tokens.pop();\r\n    return this.token;\r\n};\r\n\r\n/**\r\n * Preview Next Token\r\n */\r\n\r\nParser.prototype.peek = function () {\r\n    return this.tokens[this.tokens.length - 1] || 0;\r\n};\r\n\r\n/**\r\n * Parse Text Tokens\r\n */\r\n\r\nParser.prototype.parseText = function () {\r\n    var body = this.token.text;\r\n\r\n    while (this.peek().type === 'text') {\r\n        body += '\\n' + this.next().text;\r\n    }\r\n\r\n    return this.inline.output(body);\r\n};\r\n\r\n/**\r\n * Parse Current Token\r\n */\r\n\r\nParser.prototype.tok = function () {\r\n    switch (this.token.type) {\r\n        case 'space': {\r\n            return '';\r\n        }\r\n        case 'hr': {\r\n            return this.renderer.hr();\r\n        }\r\n        case 'heading': {\r\n            return this.renderer.heading(\r\n                this.inline.output(this.token.text),\r\n                this.token.depth,\r\n                unescape(this.inlineText.output(this.token.text)),\r\n                this.slugger);\r\n        }\r\n        case 'code': {\r\n            return this.renderer.code(this.token.text,\r\n                this.token.lang,\r\n                this.token.escaped);\r\n        }\r\n        case 'table': {\r\n            var header = '',\r\n                body = '',\r\n                i,\r\n                row,\r\n                cell,\r\n                j;\r\n\r\n            // header\r\n            cell = '';\r\n            for (i = 0; i < this.token.header.length; i++) {\r\n                cell += this.renderer.tablecell(\r\n                    this.inline.output(this.token.header[i]),\r\n                    {header: true, align: this.token.align[i]}\r\n                );\r\n            }\r\n            header += this.renderer.tablerow(cell);\r\n\r\n            for (i = 0; i < this.token.cells.length; i++) {\r\n                row = this.token.cells[i];\r\n\r\n                cell = '';\r\n                for (j = 0; j < row.length; j++) {\r\n                    cell += this.renderer.tablecell(\r\n                        this.inline.output(row[j]),\r\n                        {header: false, align: this.token.align[j]}\r\n                    );\r\n                }\r\n\r\n                body += this.renderer.tablerow(cell);\r\n            }\r\n            return this.renderer.table(header, body);\r\n        }\r\n        case 'blockquote_start': {\r\n            body = '';\r\n\r\n            while (this.next().type !== 'blockquote_end') {\r\n                body += this.tok();\r\n            }\r\n\r\n            return this.renderer.blockquote(body);\r\n        }\r\n        case 'list_start': {\r\n            body = '';\r\n            var ordered = this.token.ordered,\r\n                start = this.token.start;\r\n\r\n            while (this.next().type !== 'list_end') {\r\n                body += this.tok();\r\n            }\r\n            return this.renderer.list(body, ordered, start);\r\n        }\r\n        case 'list_item_start': {\r\n            body = '';\r\n            var loose = this.token.loose;\r\n            var checked = this.token.checked;\r\n            var task = this.token.task;\r\n\r\n            if (this.token.task) {\r\n                body += this.renderer.checkbox(checked);\r\n            }\r\n\r\n            while (this.next().type !== 'list_item_end') {\r\n                body += !loose && this.token.type === 'text'\r\n                    ? this.parseText()\r\n                    : this.tok();\r\n            }\r\n            return this.renderer.listitem(body, task, checked);\r\n        }\r\n        case 'html': {\r\n            // TODO parse inline content if parameter src=1\r\n            return this.renderer.html(this.token.text);\r\n        }\r\n        case 'paragraph': {\r\n            return this.renderer.paragraph(this.inline.output(this.token.text));\r\n        }\r\n        case 'text': {\r\n            return this.renderer.paragraph(this.parseText());\r\n        }\r\n        default: {\r\n            var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\r\n            if (this.options.silent) {\r\n                console.log(errMsg);\r\n            } else {\r\n                throw new Error(errMsg);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Slugger generates header id\r\n */\r\n\r\nfunction Slugger() {\r\n    this.seen = {};\r\n}\r\n\r\n/**\r\n * Convert string to unique id\r\n */\r\n\r\nSlugger.prototype.slug = function (value) {\r\n    var slug = value\r\n        .toLowerCase()\r\n        .trim()\r\n        .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\r\n        .replace(/\\s/g, '-');\r\n\r\n    if (this.seen.hasOwnProperty(slug)) {\r\n        var originalSlug = slug;\r\n        do {\r\n            this.seen[originalSlug]++;\r\n            slug = originalSlug + '-' + this.seen[originalSlug];\r\n        } while (this.seen.hasOwnProperty(slug));\r\n    }\r\n    this.seen[slug] = 0;\r\n\r\n    return slug;\r\n};\r\n\r\n/**\r\n * Helpers\r\n */\r\n\r\nfunction escape(html, encode) {\r\n    if (encode) {\r\n        if (escape.escapeTest.test(html)) {\r\n            return html.replace(escape.escapeReplace, function (ch) {\r\n                return escape.replacements[ch];\r\n            });\r\n        }\r\n    } else {\r\n        if (escape.escapeTestNoEncode.test(html)) {\r\n            return html.replace(escape.escapeReplaceNoEncode, function (ch) {\r\n                return escape.replacements[ch];\r\n            });\r\n        }\r\n    }\r\n\r\n    return html;\r\n}\r\n\r\nescape.escapeTest = /[&<>\"']/;\r\nescape.escapeReplace = /[&<>\"']/g;\r\nescape.replacements = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#39;'\r\n};\r\n\r\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\r\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\r\n\r\nfunction unescape(html) {\r\n    // explicitly match decimal, hex, and named HTML entities\r\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\r\n        n = n.toLowerCase();\r\n        if (n === 'colon') return ':';\r\n        if (n.charAt(0) === '#') {\r\n            return n.charAt(1) === 'x'\r\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n                : String.fromCharCode(+n.substring(1));\r\n        }\r\n        return '';\r\n    });\r\n}\r\n\r\nfunction edit(regex, opt) {\r\n    regex = regex.source || regex;\r\n    opt = opt || '';\r\n    return {\r\n        replace: function (name, val) {\r\n            val = val.source || val;\r\n            val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n            regex = regex.replace(name, val);\r\n            return this;\r\n        },\r\n        getRegex: function () {\r\n            return new RegExp(regex, opt);\r\n        }\r\n    };\r\n}\r\n\r\nfunction cleanUrl(sanitize, base, href) {\r\n    if (sanitize) {\r\n        try {\r\n            var prot = decodeURIComponent(unescape(href))\r\n                .replace(/[^\\w:]/g, '')\r\n                .toLowerCase();\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n        if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\r\n            return null;\r\n        }\r\n    }\r\n    if (base && !originIndependentUrl.test(href)) {\r\n        href = resolveUrl(base, href);\r\n    }\r\n    try {\r\n        href = encodeURI(href).replace(/%25/g, '%');\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n    return href;\r\n}\r\n\r\nfunction resolveUrl(base, href) {\r\n    if (!baseUrls[' ' + base]) {\r\n        // we can ignore everything in base after the last slash of its path component,\r\n        // but we might need to add _that_\r\n        // https://tools.ietf.org/html/rfc3986#section-3\r\n        if (/^[^:]+:\\/*[^/]*$/.test(base)) {\r\n            baseUrls[' ' + base] = base + '/';\r\n        } else {\r\n            baseUrls[' ' + base] = rtrim(base, '/', true);\r\n        }\r\n    }\r\n    base = baseUrls[' ' + base];\r\n\r\n    if (href.slice(0, 2) === '//') {\r\n        return base.replace(/:[\\s\\S]*/, ':') + href;\r\n    } else if (href.charAt(0) === '/') {\r\n        return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\r\n    } else {\r\n        return base + href;\r\n    }\r\n}\r\n\r\nvar baseUrls = {};\r\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\r\n\r\nfunction noop() {\r\n}\r\n\r\nnoop.exec = noop;\r\n\r\nfunction merge(obj) {\r\n    var i = 1,\r\n        target,\r\n        key;\r\n\r\n    for (; i < arguments.length; i++) {\r\n        target = arguments[i];\r\n        for (key in target) {\r\n            if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n                obj[key] = target[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nfunction splitCells(tableRow, count) {\r\n    // ensure that every cell-delimiting pipe has a space\r\n    // before it to distinguish it from an escaped pipe\r\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\r\n            var escaped = false,\r\n                curr = offset;\r\n            while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\r\n            if (escaped) {\r\n                // odd number of slashes means | is escaped\r\n                // so we leave it alone\r\n                return '|';\r\n            } else {\r\n                // add space before unescaped |\r\n                return ' |';\r\n            }\r\n        }),\r\n        cells = row.split(/ \\|/),\r\n        i = 0;\r\n\r\n    if (cells.length > count) {\r\n        cells.splice(count);\r\n    } else {\r\n        while (cells.length < count) cells.push('');\r\n    }\r\n\r\n    for (; i < cells.length; i++) {\r\n        // leading or trailing whitespace is ignored per the gfm spec\r\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\r\n    }\r\n    return cells;\r\n}\r\n\r\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\r\n// /c*$/ is vulnerable to REDOS.\r\n// invert: Remove suffix of non-c chars instead. Default falsey.\r\nfunction rtrim(str, c, invert) {\r\n    if (str.length === 0) {\r\n        return '';\r\n    }\r\n\r\n    // Length of suffix matching the invert condition.\r\n    var suffLen = 0;\r\n\r\n    // Step left until we fail to match the invert condition.\r\n    while (suffLen < str.length) {\r\n        var currChar = str.charAt(str.length - suffLen - 1);\r\n        if (currChar === c && !invert) {\r\n            suffLen++;\r\n        } else if (currChar !== c && invert) {\r\n            suffLen++;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return str.substr(0, str.length - suffLen);\r\n}\r\n\r\nfunction findClosingBracket(str, b) {\r\n    if (str.indexOf(b[1]) === -1) {\r\n        return -1;\r\n    }\r\n    var level = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        if (str[i] === '\\\\') {\r\n            i++;\r\n        } else if (str[i] === b[0]) {\r\n            level++;\r\n        } else if (str[i] === b[1]) {\r\n            level--;\r\n            if (level < 0) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction checkSanitizeDeprecation(opt) {\r\n    if (opt && opt.sanitize && !opt.silent) {\r\n        console.warn('index(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\r\n    }\r\n}\r\n\r\n/**\r\n * Marked\r\n */\r\n\r\nfunction index(src, opt, callback) {\r\n    // throw error in case of non string input\r\n    if (typeof src === 'undefined' || src === null) {\r\n        throw new Error('index(): input parameter is undefined or null');\r\n    }\r\n    if (typeof src !== 'string') {\r\n        throw new Error('index(): input parameter is of type '\r\n            + Object.prototype.toString.call(src) + ', string expected');\r\n    }\r\n\r\n    if (callback || typeof opt === 'function') {\r\n        if (!callback) {\r\n            callback = opt;\r\n            opt = null;\r\n        }\r\n\r\n        opt = merge({}, index.defaults, opt || {});\r\n        checkSanitizeDeprecation(opt);\r\n\r\n        var highlight = opt.highlight,\r\n            tokens,\r\n            pending,\r\n            i = 0;\r\n\r\n        try {\r\n            tokens = Lexer.lex(src, opt);\r\n        } catch (e) {\r\n            return callback(e);\r\n        }\r\n\r\n        pending = tokens.length;\r\n\r\n        var done = function (err) {\r\n            if (err) {\r\n                opt.highlight = highlight;\r\n                return callback(err);\r\n            }\r\n\r\n            var out;\r\n\r\n            try {\r\n                out = Parser.parse(tokens, opt);\r\n            } catch (e) {\r\n                err = e;\r\n            }\r\n\r\n            opt.highlight = highlight;\r\n\r\n            return err\r\n                ? callback(err)\r\n                : callback(null, out);\r\n        };\r\n\r\n        if (!highlight || highlight.length < 3) {\r\n            return done();\r\n        }\r\n\r\n        delete opt.highlight;\r\n\r\n        if (!pending) return done();\r\n\r\n        for (; i < tokens.length; i++) {\r\n            (function (token) {\r\n                if (token.type !== 'code') {\r\n                    return --pending || done();\r\n                }\r\n                return highlight(token.text, token.lang, function (err, code) {\r\n                    if (err) return done(err);\r\n                    if (code == null || code === token.text) {\r\n                        return --pending || done();\r\n                    }\r\n                    token.text = code;\r\n                    token.escaped = true;\r\n                    --pending || done();\r\n                });\r\n            })(tokens[i]);\r\n        }\r\n\r\n        return;\r\n    }\r\n    try {\r\n        if (opt) opt = merge({}, index.defaults, opt);\r\n        checkSanitizeDeprecation(opt);\r\n        return Parser.parse(Lexer.lex(src, opt), opt);\r\n    } catch (e) {\r\n        e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\r\n        if ((opt || index.defaults).silent) {\r\n            return '<p>An error occurred:</p><pre>'\r\n                + escape(e.message + '', true)\r\n                + '</pre>';\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n\r\n/**\r\n * Options\r\n */\r\n\r\nindex.options =\r\n    index.setOptions = function (opt) {\r\n        merge(index.defaults, opt);\r\n        return index;\r\n    };\r\n\r\nindex.getDefaults = function () {\r\n    return {\r\n        baseUrl: null,\r\n        breaks: false,\r\n        gfm: true,\r\n        headerIds: true,\r\n        headerPrefix: '',\r\n        highlight: null,\r\n        langPrefix: 'language-',\r\n        mangle: true,\r\n        pedantic: false,\r\n        renderer: new Renderer(),\r\n        sanitize: false,\r\n        sanitizer: null,\r\n        silent: false,\r\n        smartLists: false,\r\n        smartypants: false,\r\n        xhtml: false\r\n    };\r\n};\r\n\r\nindex.defaults = index.getDefaults();\r\n\r\n/**\r\n * Expose\r\n */\r\n\r\nindex.Parser = Parser;\r\nindex.parser = Parser.parse;\r\n\r\nindex.Renderer = Renderer;\r\nindex.TextRenderer = TextRenderer;\r\n\r\nindex.Lexer = Lexer;\r\nindex.lexer = Lexer.lex;\r\n\r\nindex.InlineLexer = InlineLexer;\r\nindex.inlineLexer = InlineLexer.output;\r\n\r\nindex.Slugger = Slugger;\r\n\r\nindex.parse = index;\r\n\r\nexport default index\r\n"]}]}