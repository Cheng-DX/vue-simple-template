{"remainingRequest":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\vuex\\store.js","dependencies":[{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\vuex\\store.js","mtime":1640271252813},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638433259471},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1638433269605}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n// Vuex\nimport Vuex from 'vuex';\nimport Vue from 'vue';\nimport router from \"../router/index\"; // createPersistedState\n\nimport createPersistedState from 'vuex-persistedstate';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    switchType: 'el-fade-in',\n    catchedRoutes: [],\n    routerTagVisible: true,\n    routerTagClosable: true,\n    routerTagCloseEvent: 'backToFirst',\n    routerTagColor: '#fff',\n    notShownWhenEmpty: true,\n    breadcrumbVisible: true,\n    collapse: false\n  },\n  mutations: {\n    setSwitchType: function setSwitchType(state, type) {\n      state.switchType = type;\n    },\n    addRoute: function addRoute(state, toRoute) {\n      if (toRoute.meta != undefined && toRoute.meta.notCatche != undefined && toRoute.meta.notCatche) {// void\n      } else if (toRoute.path === '/') {// void\n      } else {\n        var hasRoute = false;\n        state.catchedRoutes.forEach(function (route) {\n          if (route.path === toRoute.path) {\n            hasRoute = true;\n          }\n        });\n\n        if (!hasRoute) {\n          var item = {\n            path: toRoute.path,\n            name: toRoute.name,\n            icon: toRoute.meta.icon ? toRoute.meta.icon : ''\n          };\n          state.catchedRoutes.push(item);\n        }\n      }\n    },\n    removeRoute: function removeRoute(state, route) {\n      var index = state.catchedRoutes.indexOf(route);\n      var targetRoute = null;\n\n      if (route.path === router.currentRoute.path) {\n        switch (state.routerTagCloseEvent) {\n          case 'backToFirst':\n            if (state.catchedRoutes.length > 1) {\n              targetRoute = state.catchedRoutes[0];\n            } else {\n              targetRoute = null;\n            }\n\n            break;\n\n          case 'backToPrev':\n            if (index > 0) {\n              targetRoute = state.catchedRoutes[index - 1];\n            } else {\n              targetRoute = null;\n            }\n\n            break;\n\n          case 'backToHome':\n            targetRoute = '/';\n            break;\n\n          default:\n            targetRoute = null;\n            break;\n        }\n\n        state.catchedRoutes.splice(index, 1);\n\n        if (targetRoute != null) {\n          router.push(targetRoute);\n        }\n      } else {\n        state.catchedRoutes.splice(index, 1);\n      }\n    },\n    clearAllRoutes: function clearAllRoutes(state) {\n      state.catchedRoutes = [];\n    },\n    setRouterTagVisible: function setRouterTagVisible(state, visible) {\n      state.routerTagVisible = visible;\n    },\n    setRouterTagClosable: function setRouterTagClosable(state, closable) {\n      state.routerTagClosable = closable;\n    },\n    setRouterTagCloseEvent: function setRouterTagCloseEvent(state, closeEvent) {\n      state.routerTagCloseEvent = closeEvent;\n    },\n    setRouterTagColor: function setRouterTagColor(state, color) {\n      state.routerTagColor = color;\n    },\n    setNotShownWhenEmpty: function setNotShownWhenEmpty(state, notShownWhenEmpty) {\n      state.notShownWhenEmpty = notShownWhenEmpty;\n    },\n    setBreadcrumbVisible: function setBreadcrumbVisible(state, visible) {\n      state.breadcrumbVisible = visible;\n    },\n    setCollapse: function setCollapse(state, collapse) {\n      state.collapse = collapse;\n    }\n  }\n});\nexport default store;",{"version":3,"sources":["C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\vuex\\store.js"],"names":["Vuex","Vue","router","createPersistedState","use","store","Store","plugins","state","switchType","catchedRoutes","routerTagVisible","routerTagClosable","routerTagCloseEvent","routerTagColor","notShownWhenEmpty","breadcrumbVisible","collapse","mutations","setSwitchType","type","addRoute","toRoute","meta","undefined","notCatche","path","hasRoute","forEach","route","item","name","icon","push","removeRoute","index","indexOf","targetRoute","currentRoute","length","splice","clearAllRoutes","setRouterTagVisible","visible","setRouterTagClosable","closable","setRouterTagCloseEvent","closeEvent","setRouterTagColor","color","setNotShownWhenEmpty","setBreadcrumbVisible","setCollapse"],"mappings":"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","sourcesContent":["// Vuex\r\nimport Vuex from 'vuex'\r\nimport Vue from 'vue'\r\nimport router from '../router/index'\r\n\r\n// createPersistedState\r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  plugins: [createPersistedState()],\r\n  state: {\r\n    switchType: 'el-fade-in',\r\n    catchedRoutes: [],\r\n    routerTagVisible: true,\r\n    routerTagClosable: true,\r\n    routerTagCloseEvent: 'backToFirst',\r\n    routerTagColor: '#fff',\r\n    notShownWhenEmpty: true,\r\n    breadcrumbVisible: true,\r\n    collapse: false,\r\n  },\r\n  mutations: {\r\n    setSwitchType(state, type) {\r\n      state.switchType = type\r\n    },\r\n    addRoute(state, toRoute) {\r\n      if (toRoute.meta != undefined && toRoute.meta.notCatche != undefined && toRoute.meta.notCatche) {\r\n        // void\r\n      } else if (toRoute.path === '/') {\r\n        // void\r\n      } else {\r\n        let hasRoute = false;\r\n        state.catchedRoutes.forEach(route => {\r\n          if (route.path === toRoute.path) {\r\n            hasRoute = true;\r\n          }\r\n        })\r\n        if (!hasRoute) {\r\n          let item = {\r\n            path: toRoute.path,\r\n            name: toRoute.name,\r\n            icon: toRoute.meta.icon ? toRoute.meta.icon : '',\r\n          }\r\n          state.catchedRoutes.push(item)\r\n        }\r\n      }\r\n    },\r\n    removeRoute(state, route) {\r\n      let index = state.catchedRoutes.indexOf(route)\r\n      let targetRoute = null\r\n\r\n      if (route.path === router.currentRoute.path) {\r\n        switch (state.routerTagCloseEvent) {\r\n          case 'backToFirst':\r\n            if (state.catchedRoutes.length > 1) {\r\n              targetRoute = state.catchedRoutes[0]\r\n            } else {\r\n              targetRoute = null\r\n            }\r\n            break;\r\n          case 'backToPrev':\r\n            if (index > 0) {\r\n              targetRoute = state.catchedRoutes[index - 1]\r\n            } else {\r\n              targetRoute = null\r\n            }\r\n            break;\r\n          case 'backToHome':\r\n            targetRoute = '/'\r\n            break;\r\n          default:\r\n            targetRoute = null\r\n            break;\r\n        }\r\n        state.catchedRoutes.splice(index, 1)\r\n        if (targetRoute != null) {\r\n          router.push(targetRoute)\r\n        }\r\n      }else{\r\n        state.catchedRoutes.splice(index, 1)\r\n      }\r\n    },\r\n    clearAllRoutes(state) {\r\n      state.catchedRoutes = []\r\n    },\r\n    setRouterTagVisible(state, visible) {\r\n      state.routerTagVisible = visible\r\n    },\r\n    setRouterTagClosable(state, closable) {\r\n      state.routerTagClosable = closable\r\n    },\r\n    setRouterTagCloseEvent(state, closeEvent) {\r\n      state.routerTagCloseEvent = closeEvent\r\n    },\r\n    setRouterTagColor(state, color) {\r\n      state.routerTagColor = color\r\n    },\r\n    setNotShownWhenEmpty(state, notShownWhenEmpty) {\r\n      state.notShownWhenEmpty = notShownWhenEmpty\r\n    },\r\n    setBreadcrumbVisible(state, visible) {\r\n      state.breadcrumbVisible = visible\r\n    },\r\n    setCollapse(state, collapse) {\r\n      state.collapse = collapse\r\n    }\r\n    \r\n  }\r\n});\r\n\r\nexport default store"]}]}