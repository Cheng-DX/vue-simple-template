{"remainingRequest":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\markdown\\components\\preview\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\markdown\\components\\preview\\index.vue","mtime":1640167407521},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638433259471},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1638433269605},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638433259471},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1638433267894}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport marked from '../../config/marked';\n\nexport default {\n    name: 'markdown-preview',\n    props: {\n        initialValue: {\n            // 初始化内容\n            type: String,\n            default: ''\n        },\n        markedOptions: {\n            type: Object,\n            default: () => ({})\n        },\n        theme: {\n            type: String,\n            default: 'light'\n        },\n        copyCode: {// 复制代码\n            type: Boolean,\n            default: true\n        },\n        copyBtnText: {// 复制代码按钮文字\n            type: String,\n            default: '复制代码'\n        }\n    },\n    data() {\n        return {\n            html: '',\n            previewImgModal: false,\n            previewImgSrc: '',\n            previewImgMode: ''\n        };\n    },\n    mounted() {\n        this.translateMarkdown();\n    },\n    methods: {\n        translateMarkdown() {\n            let html = marked(this.initialValue, {\n                sanitize: false,\n                ...this.markedOptions\n            }).replace(/href=\"/gi, 'target=\"_blank\" href=\"');\n            if (this.copyCode) {\n                html = html.replace(/<pre>/g, '<div class=\"code-block\"><span class=\"copy-code\">' + this.copyBtnText + '</span><pre>').replace(/<\\/pre>/g, '</pre></div>');\n            }\n            this.html = html;\n\n            this.addCopyListener();\n            this.addImageClickListener();\n        },\n        addCopyListener() {// 监听复制操作\n            setTimeout(() => {\n                const btns = document.querySelectorAll(\n                    '.code-block .copy-code'\n                );\n                this.btns = btns;\n                for (let i = 0, len = btns.length; i < len; i++) {\n                    btns[i].onclick = () => {\n                        const code = btns[i].parentNode.querySelectorAll(\n                            'pre'\n                        )[0].innerText;\n                        const aux = document.createElement('input');\n                        aux.setAttribute('value', code);\n                        document.body.appendChild(aux);\n                        aux.select();\n                        document.execCommand('copy');\n                        document.body.removeChild(aux);\n                        this.$emit('on-copy', code);\n                    };\n                }\n            }, 600);\n        },\n        addImageClickListener() {// 监听查看大图\n            const {imgs = []} = this;\n            if (imgs.length > 0) {\n                for (let i = 0, len = imgs.length; i < len; i++) {\n                    imgs[i].onclick = null;\n                }\n            }\n            setTimeout(() => {\n                this.imgs = this.$refs.preview.querySelectorAll('img');\n                for (let i = 0, len = this.imgs.length; i < len; i++) {\n                    this.imgs[i].onclick = () => {\n                        const src = this.imgs[i].getAttribute('src');\n                        this.previewImage(src);\n                    };\n                }\n            }, 600);\n        },\n        previewImage(src) {// 预览图片\n            const img = new Image();\n            img.src = src;\n            img.onload = () => {\n                const width = img.naturalWidth;\n                const height = img.naturalHeight;\n                if (height / width > 1.4) {\n                    this.previewImgMode = 'horizontal';\n                } else {\n                    this.previewImgMode = 'vertical';\n                }\n                this.previewImgSrc = src;\n                this.previewImgModal = true;\n            };\n        }\n    },\n    watch: {\n        initialValue() {\n            this.translateMarkdown();\n        }\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"index.vue","sourceRoot":"src/util/markdown/components/preview","sourcesContent":["<template>\r\n    <div ref=\"preview\">\r\n        <div\r\n            :class=\"`markdown-preview ${'markdown-theme-' + theme}`\"\r\n            v-html=\"html\"\r\n        ></div>\r\n        <!-- 预览图片-->\r\n        <div :class=\"['preview-img', previewImgModal ? 'active' : '']\">\r\n            <span\r\n                class=\"close icon-close iconfont\"\r\n                @click=\"previewImgModal = false\"\r\n            ></span>\r\n            <img :src=\"previewImgSrc\" :class=\"[previewImgMode]\" alt=\"\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import marked from '../../config/marked';\r\n\r\n    export default {\r\n        name: 'markdown-preview',\r\n        props: {\r\n            initialValue: {\r\n                // 初始化内容\r\n                type: String,\r\n                default: ''\r\n            },\r\n            markedOptions: {\r\n                type: Object,\r\n                default: () => ({})\r\n            },\r\n            theme: {\r\n                type: String,\r\n                default: 'light'\r\n            },\r\n            copyCode: {// 复制代码\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            copyBtnText: {// 复制代码按钮文字\r\n                type: String,\r\n                default: '复制代码'\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                html: '',\r\n                previewImgModal: false,\r\n                previewImgSrc: '',\r\n                previewImgMode: ''\r\n            };\r\n        },\r\n        mounted() {\r\n            this.translateMarkdown();\r\n        },\r\n        methods: {\r\n            translateMarkdown() {\r\n                let html = marked(this.initialValue, {\r\n                    sanitize: false,\r\n                    ...this.markedOptions\r\n                }).replace(/href=\"/gi, 'target=\"_blank\" href=\"');\r\n                if (this.copyCode) {\r\n                    html = html.replace(/<pre>/g, '<div class=\"code-block\"><span class=\"copy-code\">' + this.copyBtnText + '</span><pre>').replace(/<\\/pre>/g, '</pre></div>');\r\n                }\r\n                this.html = html;\r\n\r\n                this.addCopyListener();\r\n                this.addImageClickListener();\r\n            },\r\n            addCopyListener() {// 监听复制操作\r\n                setTimeout(() => {\r\n                    const btns = document.querySelectorAll(\r\n                        '.code-block .copy-code'\r\n                    );\r\n                    this.btns = btns;\r\n                    for (let i = 0, len = btns.length; i < len; i++) {\r\n                        btns[i].onclick = () => {\r\n                            const code = btns[i].parentNode.querySelectorAll(\r\n                                'pre'\r\n                            )[0].innerText;\r\n                            const aux = document.createElement('input');\r\n                            aux.setAttribute('value', code);\r\n                            document.body.appendChild(aux);\r\n                            aux.select();\r\n                            document.execCommand('copy');\r\n                            document.body.removeChild(aux);\r\n                            this.$emit('on-copy', code);\r\n                        };\r\n                    }\r\n                }, 600);\r\n            },\r\n            addImageClickListener() {// 监听查看大图\r\n                const {imgs = []} = this;\r\n                if (imgs.length > 0) {\r\n                    for (let i = 0, len = imgs.length; i < len; i++) {\r\n                        imgs[i].onclick = null;\r\n                    }\r\n                }\r\n                setTimeout(() => {\r\n                    this.imgs = this.$refs.preview.querySelectorAll('img');\r\n                    for (let i = 0, len = this.imgs.length; i < len; i++) {\r\n                        this.imgs[i].onclick = () => {\r\n                            const src = this.imgs[i].getAttribute('src');\r\n                            this.previewImage(src);\r\n                        };\r\n                    }\r\n                }, 600);\r\n            },\r\n            previewImage(src) {// 预览图片\r\n                const img = new Image();\r\n                img.src = src;\r\n                img.onload = () => {\r\n                    const width = img.naturalWidth;\r\n                    const height = img.naturalHeight;\r\n                    if (height / width > 1.4) {\r\n                        this.previewImgMode = 'horizontal';\r\n                    } else {\r\n                        this.previewImgMode = 'vertical';\r\n                    }\r\n                    this.previewImgSrc = src;\r\n                    this.previewImgModal = true;\r\n                };\r\n            }\r\n        },\r\n        watch: {\r\n            initialValue() {\r\n                this.translateMarkdown();\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n    @import \"../../assets/font/iconfont.css\";\r\n    @import \"../../assets/css/theme\";\r\n    @import \"../../assets/css/index\";\r\n    @import \"../../assets/css/light\";\r\n    @import \"../../assets/css/dark\";\r\n    @import \"../../assets/css/one-dark\";\r\n    @import \"../../assets/css/github\";\r\n</style>\r\n"]}]}