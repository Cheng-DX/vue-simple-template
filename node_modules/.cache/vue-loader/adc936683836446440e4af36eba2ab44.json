{"remainingRequest":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\dEcharts\\echartsData.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\src\\util\\dEcharts\\echartsData.vue","mtime":1640187387743},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638433259471},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1638433269605},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638433259471},{"path":"C:\\Users\\猫丞\\Desktop\\9M\\frontendVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1638433267894}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sortMethod: function (a, b, prop) {\r\n        let doubleA = parseFloat(a[prop]);\r\n        let doubleB = parseFloat(b[prop]);\r\n        if (doubleA > doubleB) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      },\r\n      dialogVisible: false,\r\n      tableData: [],\r\n      labels: [],\r\n      title: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    deleteData() {\r\n      this.tableData = [];\r\n    },\r\n    show(val) {\r\n      this.tableData = [];\r\n      this.labels = [];\r\n\r\n      if (val.title === undefined) {\r\n        this.title = \"数据视图\";\r\n      } else {\r\n        this.title = val.title[0].text;\r\n      }\r\n\r\n      let xLabel = val.xAxis[0].name;\r\n      if (xLabel === \"\" || xLabel === undefined) {\r\n        xLabel = \"x\";\r\n      }\r\n      this.labels.push({ prop: \"-1\", label: xLabel });\r\n      for (let i = 0; i < val.series.length; i++) {\r\n        let obj = {};\r\n        obj[\"prop\"] = i + \"\";\r\n        let currentLabel = \"\";\r\n        if (val.series[i].name === undefined) {\r\n          if (val.series[i].yAxisIndex === undefined) {\r\n            currentLabel = val.yAxis[0].name;\r\n          } else {\r\n            currentLabel = val.yAxis[val.series[i].yAxisIndex].name;\r\n          }\r\n        } else {\r\n          currentLabel = val.series[i].name;\r\n        }\r\n        if (currentLabel === \"\" || currentLabel === undefined) {\r\n          if (val.title != undefined) {\r\n            currentLabel = val.title[0].text;\r\n          }\r\n        }\r\n        obj[\"label\"] = currentLabel;\r\n        this.labels.push(obj);\r\n      }\r\n      for (let i = 0; i < val.xAxis[0].data.length; i++) {\r\n        let obj = {};\r\n        obj[\"-1\"] = val.xAxis[0].data[i];\r\n        for (let j = 0; j < val.series.length; j++) {\r\n          let prop = j + \"\";\r\n          obj[prop] = val.series[j].data[i];\r\n        }\r\n        this.tableData.push(obj);\r\n      }\r\n      this.dialogVisible = true;\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["echartsData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"echartsData.vue","sourceRoot":"src/util/dEcharts","sourcesContent":["<template>\r\n  <el-dialog\r\n    top=\"5vh\"\r\n    width=\"80%\"\r\n    :modal=\"true\"\r\n    center\r\n    :title=\"title\"\r\n    append-to-body\r\n    :visible.sync=\"dialogVisible\"\r\n    :modal-append-to-body=\"false\"\r\n    @closed=\"deleteData\"\r\n  >\r\n    <el-table :data=\"tableData\" style=\"width: 100%\" height=\"75vh\">\r\n      <el-table-column type=\"index\" width=\"60\" sortable />\r\n      <el-table-column\r\n        v-for=\"(item, index) in labels\"\r\n        :key=\"index\"\r\n        :prop=\"item.prop\"\r\n        :label=\"item.label\"\r\n        sortable\r\n        min-width=\"100\"\r\n        align=\"center\"\r\n        :sort-method=\"(a, b) => sortMethod(a, b, item.prop)\"\r\n      />\r\n    </el-table>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      sortMethod: function (a, b, prop) {\r\n        let doubleA = parseFloat(a[prop]);\r\n        let doubleB = parseFloat(b[prop]);\r\n        if (doubleA > doubleB) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      },\r\n      dialogVisible: false,\r\n      tableData: [],\r\n      labels: [],\r\n      title: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    deleteData() {\r\n      this.tableData = [];\r\n    },\r\n    show(val) {\r\n      this.tableData = [];\r\n      this.labels = [];\r\n\r\n      if (val.title === undefined) {\r\n        this.title = \"数据视图\";\r\n      } else {\r\n        this.title = val.title[0].text;\r\n      }\r\n\r\n      let xLabel = val.xAxis[0].name;\r\n      if (xLabel === \"\" || xLabel === undefined) {\r\n        xLabel = \"x\";\r\n      }\r\n      this.labels.push({ prop: \"-1\", label: xLabel });\r\n      for (let i = 0; i < val.series.length; i++) {\r\n        let obj = {};\r\n        obj[\"prop\"] = i + \"\";\r\n        let currentLabel = \"\";\r\n        if (val.series[i].name === undefined) {\r\n          if (val.series[i].yAxisIndex === undefined) {\r\n            currentLabel = val.yAxis[0].name;\r\n          } else {\r\n            currentLabel = val.yAxis[val.series[i].yAxisIndex].name;\r\n          }\r\n        } else {\r\n          currentLabel = val.series[i].name;\r\n        }\r\n        if (currentLabel === \"\" || currentLabel === undefined) {\r\n          if (val.title != undefined) {\r\n            currentLabel = val.title[0].text;\r\n          }\r\n        }\r\n        obj[\"label\"] = currentLabel;\r\n        this.labels.push(obj);\r\n      }\r\n      for (let i = 0; i < val.xAxis[0].data.length; i++) {\r\n        let obj = {};\r\n        obj[\"-1\"] = val.xAxis[0].data[i];\r\n        for (let j = 0; j < val.series.length; j++) {\r\n          let prop = j + \"\";\r\n          obj[prop] = val.series[j].data[i];\r\n        }\r\n        this.tableData.push(obj);\r\n      }\r\n      this.dialogVisible = true;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n::-webkit-scrollbar {\r\n  width: 5px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #38353563;\r\n  border-radius: 3px;\r\n}\r\n\r\n>>> .el-dialog__header {\r\n  padding-top: 10 px;\r\n  padding-right: 20 px;\r\n  padding-bottom: 10 px;\r\n  padding-left: 20 px;\r\n}\r\n\r\n>>> .el-table .cell {\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  word-break: break-all;\r\n  line-height: 23px;\r\n  padding-right: 10 px;\r\n  color: rgba(0, 0, 0, 0.863);\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n</style>\r\n\r\n"]}]}